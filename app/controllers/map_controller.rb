class MapController < ApplicationController
  around_filter :profile if Rails.env == 'development'
  require 'builder'
  require 'rest_client'
  respond_to :xml
  def profile
    if params[:profile] && result = RubyProf.profile { yield }

      out = StringIO.new
      RubyProf::GraphHtmlPrinter.new(result).print out, :min_percent => 0
      self.response_body = out.string

    else
      yield
    end
  end
  def textUser
    number = params[:callerid]
    response = params[:response]
    text(number, response)
    textxml
    respond_to do |format|
        format.xml { render :xml => @xml }
    end
  end



  def textxml
    xml = Builder::XmlMarkup.new
    @xml = xml.ANGELXML{
      xml.MESSAGE {
        xml.PLAY {
          xml.PROMPT("type" => "text") {
            ""
          }
        }
        xml.GOTO("destination" => "/7")
      }
    }
    end


  #Receives a text message and processes its commands
  def receive
    puts "received text"
    body = params["Body"]
    puts "BODY"
    puts body
    number = params["From"]
    bldg =  /([A-Z]+\d*)|(\d+)/
    matchBldg = body.scan bldg
    matches = []
    puts "matchBldg"
    puts matchBldg
    puts "end MatchBldg"
    matchBldg.each do |tofrom|
      tofrom.each do |m|
        if m != nil
          matches << m
        end
      end
    end
    puts "MATCHES"
    puts matches
    if matches.length == 2 or matches.length==1
      if matches.length==2
        from = Building.where(:mit => matches[0]).first
        to = Building.where(:mit => matches[1]).first
      else
        from = Building.where(:mit => "W20").first
        to = Building.where(:mit => matches[0]).first
      end
      puts "FROMTO"
      puts from
      puts to
      if from and to
        logic2(number, from.mit, to.mit, true)

        puts from
        puts to
        puts "from, to"
      else
        text(number, "Sorry, I didn't understand that. You can type in the two building names you want to go to in capital letters" +
        " with a space in between.")
      end
    else
      text(number, "Sorry, I didn't understand that. You can type in the two building names you want to go to in capital letters" +
        " with a space in between.")
    end
    render :nothing => true
  end
  #Gets the parameters from Angel
  def goodPoint(from, to, i)
    if to>from
      return (i<to and i>from)
    else
      return (i < to or i> from)
    end
  end
  def getParams
    puts "receiving"
    number = params[:callerid]
    from = params[:currentlocation]
    to = params[:destinationwanted]
    puts number
    puts from
    puts to
    logic(number, from, to)
  end
  def logic2(number, from, to, textbool=false)
    stb = {2=>{13677=>173, 13678=>275, 13679=>513, 13680=>585, 13681=>335, 13682=>572, 13683=>173, 13684=>659, 13685=>665, 13686=>367, 13687=>537, 13688=>646, 13689=>719, 13690=>494, 13691=>2356, 13692=>1381, 13693=>532, 13694=>1134, 13695=>1375, 13696=>459, 13697=>446, 13698=>1402, 13699=>392, 13700=>1397, 13701=>392, 13702=>964, 13703=>845, 13704=>2745, 13705=>293, 13706=>406, 13707=>1228, 13708=>808, 13709=>459, 13710=>1318, 13711=>903, 13712=>1235, 13713=>779, 13714=>816, 13715=>1206, 13716=>376, 13717=>1325, 13718=>1325, 13719=>812, 13720=>1163, 13721=>1045, 13722=>1081, 13723=>1185, 13724=>262, 13725=>1191, 13726=>75, 13727=>817, 13728=>393, 13729=>1414}, 4=>{13677=>761, 13678=>832, 13679=>950, 13680=>1022, 13681=>1104, 13682=>1129, 13683=>761, 13706=>843, 13707=>481, 13708=>148, 13709=>896, 13710=>571, 13711=>133, 13712=>488, 13713=>119, 13714=>156, 13715=>431, 13684=>1085, 13685=>1222, 13686=>1136, 13687=>1275, 13688=>1083, 13689=>1276, 13690=>1263, 13691=>2027, 13692=>624, 13693=>1038, 13694=>1810, 13695=>628, 13696=>1228, 13697=>1215, 13698=>733, 13699=>949, 13700=>650, 13701=>949, 13702=>194, 13703=>98, 13704=>2540, 13705=>1062, 13716=>891, 13717=>578, 13718=>543, 13719=>152, 13720=>416, 13721=>270, 13722=>334, 13723=>438, 13724=>766, 13725=>444, 13726=>844, 13727=>1257, 13728=>1162, 13729=>784}, 5=>{13708=>139, 13709=>975, 13710=>472, 13711=>235, 13712=>389, 13713=>168, 13714=>130, 13715=>533, 13716=>970, 13717=>479, 13679=>1029, 13680=>1101, 13681=>1183, 13682=>1208, 13683=>840, 13684=>1164, 13685=>1301, 13686=>1215, 13687=>1354, 13688=>1162, 13725=>345, 13726=>923, 13727=>1336, 13728=>1241, 13729=>685, 13677=>840, 13678=>911, 13689=>1355, 13690=>1342, 13691=>1928, 13692=>588, 13693=>1117, 13694=>1949, 13695=>529, 13696=>1307, 13697=>1294, 13698=>634, 13699=>1028, 13700=>551, 13704=>2441, 13705=>1141, 13706=>922, 13707=>382, 13718=>645, 13719=>134, 13720=>317, 13721=>372, 13722=>235, 13723=>339, 13701=>1028, 13702=>296, 13703=>1, 13724=>845}, 6=>{13725=>3, 13726=>1252, 13727=>1665, 13728=>1570, 13729=>554, 13677=>1169, 13678=>1240, 13679=>1358, 13680=>1430, 13681=>1512, 13695=>398, 13696=>1636, 13697=>1623, 13698=>496, 13699=>1357, 13700=>420, 13701=>1357, 13702=>625, 13703=>330, 13704=>2194, 13709=>1304, 13710=>334, 13711=>564, 13712=>193, 13713=>408, 13714=>370, 13715=>781, 13716=>1299, 13717=>341, 13718=>795, 13682=>1537, 13683=>1169, 13684=>1493, 13685=>1630, 13686=>1544, 13687=>1683, 13688=>1491, 13689=>1684, 13690=>1671, 13691=>1670, 13692=>531, 13693=>1446, 13694=>1750, 13705=>1470, 13706=>1251, 13707=>190, 13723=>2, 13724=>1174, 13708=>379, 13719=>374, 13720=>135, 13721=>588, 13722=>159}, 7=>{13677=>1184, 13678=>1255, 13679=>1373, 13680=>1445, 13681=>1527, 13688=>1506, 13689=>1699, 13690=>1686, 13691=>1648, 13692=>605, 13693=>1461, 13694=>1669, 13695=>333, 13696=>1651, 13697=>1638, 13702=>640, 13703=>345, 13704=>2161, 13705=>1485, 13706=>1266, 13707=>117, 13708=>379, 13709=>1319, 13710=>284, 13711=>579, 13698=>431, 13699=>1372, 13700=>355, 13701=>1372, 13712=>220, 13713=>408, 13714=>370, 13715=>768, 13716=>1314, 13717=>276, 13729=>489, 13682=>1552, 13683=>1184, 13684=>1508, 13685=>1645, 13686=>1559, 13687=>1698, 13718=>806, 13719=>374, 13720=>25, 13721=>575, 13722=>49, 13723=>113, 13724=>1189, 13725=>107, 13726=>1267, 13727=>1680, 13728=>1585}, 8=>{13681=>1987, 13682=>1891, 13683=>2188, 13684=>1826, 13685=>1780, 13686=>2151, 13687=>1776, 13688=>2650, 13689=>1747, 13690=>1830, 13707=>1595, 13708=>1915, 13709=>1863, 13710=>1572, 13711=>2125, 13712=>1722, 13713=>1944, 13714=>1906, 13715=>2385, 13716=>1932, 13677=>2188, 13678=>2034, 13679=>1809, 13680=>2589, 13691=>4, 13692=>2081, 13693=>1787, 13694=>1306, 13695=>1540, 13700=>1517, 13701=>1969, 13702=>2186, 13703=>1891, 13704=>585, 13705=>2145, 13706=>1916, 13717=>1599, 13718=>2423, 13719=>1910, 13722=>1658, 13723=>1629, 13724=>2050, 13725=>1623, 13726=>2316, 13727=>2824, 13728=>2499, 13729=>1378, 13696=>2058, 13697=>2071, 13698=>1420, 13699=>1969, 13720=>1642, 13721=>2192}, 9=>{13682=>406, 13683=>649, 13684=>411, 13685=>258, 13686=>768, 13687=>81, 13688=>1131, 13689=>225, 13690=>339, 13691=>1727, 13693=>452, 13694=>505, 13695=>1870, 13696=>794, 13697=>807, 13698=>1747, 13699=>570, 13700=>1847, 13701=>570, 13702=>1543, 13707=>1807, 13708=>1387, 13709=>582, 13710=>1897, 13711=>1482, 13712=>1814, 13713=>1358, 13714=>1395, 13715=>1785, 13716=>595, 13728=>804, 13729=>1708, 13677=>649, 13678=>580, 13717=>1904, 13718=>1904, 13719=>1391, 13720=>1742, 13721=>1624, 13722=>1660, 13723=>1764, 13724=>590, 13725=>1770, 13726=>616, 13681=>484, 13692=>1960, 13703=>1424, 13704=>2116, 13705=>694, 13706=>632, 13727=>1228, 13679=>528, 13680=>1109}, 10=>{13687=>1819, 13688=>1627, 13689=>1820, 13690=>1807, 13691=>1582, 13692=>872, 13693=>1582, 13694=>1504, 13695=>92, 13696=>1772, 13713=>519, 13714=>481, 13715=>998, 13716=>1435, 13717=>85, 13718=>1075, 13719=>485, 13720=>294, 13721=>837, 13722=>277, 13697=>1759, 13698=>159, 13699=>1493, 13700=>114, 13701=>1493, 13702=>761, 13703=>466, 13704=>2017, 13705=>1606, 13706=>1387, 13685=>1766, 13686=>1680, 13707=>262, 13708=>490, 13709=>1440, 13710=>35, 13711=>700, 13712=>443, 13723=>336, 13724=>1310, 13677=>1305, 13678=>1376, 13679=>1494, 13680=>1566, 13681=>1648, 13682=>1673, 13683=>1305, 13684=>1629, 13725=>330, 13726=>1388, 13727=>1801, 13728=>1706, 13729=>219}, 11=>{13724=>1442, 13725=>486, 13726=>1520, 13727=>1933, 13728=>1838, 13729=>90, 13683=>1437, 13684=>1761, 13685=>1823, 13686=>1812, 13687=>1819, 13688=>1759, 13689=>1790, 13690=>1873, 13691=>1427, 13692=>1028, 13704=>1862, 13705=>1738, 13706=>1519, 13707=>418, 13708=>646, 13709=>1572, 13710=>191, 13711=>856, 13712=>599, 13713=>675, 13693=>1714, 13694=>1349, 13695=>166, 13696=>1904, 13697=>1891, 13698=>30, 13699=>1625, 13700=>143, 13701=>1625, 13702=>917, 13720=>450, 13721=>993, 13722=>433, 13723=>492, 13703=>622, 13714=>637, 13715=>1154, 13716=>1567, 13717=>225, 13718=>1231, 13719=>641, 13677=>1437, 13678=>1508, 13679=>1626, 13680=>1698, 13681=>1780, 13682=>1805}, 12=>{13706=>2283, 13707=>2087, 13708=>2407, 13709=>2230, 13710=>2002, 13711=>2617, 13712=>2243, 13713=>2436, 13714=>2398, 13715=>2877, 13677=>2555, 13678=>2401, 13679=>2176, 13680=>2956, 13685=>2147, 13686=>2518, 13687=>2143, 13688=>3017, 13689=>2114, 13690=>2197, 13691=>569, 13692=>2521, 13693=>2154, 13694=>1673, 13701=>2336, 13702=>2678, 13703=>2383, 13704=>8, 13705=>2512, 13716=>2299, 13717=>2029, 13718=>2915, 13719=>2402, 13720=>2134, 13681=>2354, 13682=>2258, 13683=>2555, 13684=>2193, 13695=>1970, 13696=>2425, 13697=>2438, 13698=>1850, 13699=>2336, 13700=>1947, 13721=>2684, 13722=>2150, 13723=>2141, 13724=>2417, 13725=>2135, 13726=>2683, 13727=>3191, 13728=>2866, 13729=>1808}, 13=>{13697=>1187, 13698=>737, 13699=>920, 13700=>654, 13701=>920, 13702=>221, 13703=>102, 13704=>2544, 13705=>1034, 13706=>814, 13691=>2031, 13692=>638, 13693=>1009, 13694=>1781, 13695=>632, 13696=>1199, 13707=>485, 13708=>119, 13709=>867, 13710=>575, 13677=>732, 13678=>803, 13679=>921, 13680=>993, 13681=>1075, 13682=>1100, 13683=>732, 13684=>1056, 13685=>1193, 13686=>1108, 13712=>492, 13713=>90, 13714=>127, 13715=>463, 13716=>862, 13717=>582, 13718=>582, 13719=>123, 13720=>420, 13721=>302, 13727=>1228, 13728=>1133, 13729=>788, 13723=>442, 13724=>737, 13725=>448, 13726=>815, 13687=>1246, 13688=>1054, 13689=>1247, 13690=>1234, 13711=>160, 13722=>338}, 14=>{13678=>599, 13679=>501, 13680=>1248, 13681=>671, 13682=>359, 13683=>750, 13684=>356, 13685=>211, 13686=>955, 13687=>268, 13720=>1806, 13721=>1688, 13722=>1724, 13723=>1828, 13724=>664, 13725=>1834, 13726=>803, 13727=>1415, 13728=>991, 13729=>1692, 13677=>750, 13688=>1318, 13689=>178, 13690=>502, 13691=>1711, 13692=>2024, 13693=>405, 13707=>1871, 13708=>1451, 13709=>555, 13694=>489, 13695=>1854, 13696=>863, 13697=>876, 13698=>1731, 13699=>523, 13714=>1459, 13715=>1849, 13716=>548, 13717=>1913, 13718=>1968, 13719=>1455, 13706=>608, 13710=>1879, 13711=>1546, 13712=>1878, 13713=>1422, 13700=>1831, 13701=>523, 13702=>1607, 13703=>1488, 13704=>2100, 13705=>881}, 15=>{13725=>590, 13726=>1104, 13727=>1517, 13728=>1422, 13729=>1041, 13687=>1535, 13688=>1343, 13689=>1536, 13690=>1523, 13691=>2228, 13692=>659, 13693=>1298, 13694=>2070, 13695=>885, 13696=>1488, 13677=>1021, 13678=>1092, 13679=>1210, 13680=>1282, 13700=>907, 13701=>1209, 13702=>151, 13703=>355, 13704=>2741, 13705=>1322, 13706=>1103, 13707=>697, 13708=>414, 13709=>1156, 13714=>422, 13715=>182, 13716=>1151, 13717=>856, 13718=>286, 13719=>418, 13720=>555, 13721=>11, 13722=>531, 13723=>584, 13681=>1364, 13682=>1389, 13683=>1021, 13684=>1345, 13685=>1482, 13686=>1396, 13697=>1475, 13698=>990, 13699=>1209, 13710=>828, 13711=>123, 13712=>630, 13713=>385, 13724=>1026}, 16=>{13717=>735, 13718=>498, 13719=>380, 13720=>432, 13721=>276, 13722=>408, 13723=>391, 13724=>994, 13725=>397, 13726=>1072, 13677=>989, 13678=>1060, 13679=>1178, 13680=>1250, 13681=>1332, 13695=>792, 13696=>1456, 13697=>1443, 13698=>890, 13699=>1177, 13700=>814, 13701=>1177, 13702=>438, 13703=>316, 13704=>2588, 13709=>1124, 13710=>741, 13711=>374, 13712=>437, 13713=>347, 13714=>384, 13715=>467, 13716=>1119, 13727=>1485, 13728=>1390, 13688=>1311, 13689=>1504, 13690=>1491, 13691=>2064, 13692=>359, 13693=>1266, 13694=>2038, 13705=>1290, 13706=>1071, 13707=>584, 13708=>376, 13729=>948, 13682=>1357, 13683=>989, 13684=>1313, 13685=>1450, 13686=>1364, 13687=>1503}, 17=>{13704=>2589, 13705=>70, 13706=>727, 13707=>1593, 13708=>1173, 13709=>780, 13710=>1683, 13711=>1268, 13712=>1600, 13713=>1144, 13690=>460, 13691=>2200, 13692=>1746, 13693=>875, 13694=>927, 13695=>1740, 13696=>96, 13697=>83, 13698=>1767, 13699=>735, 13700=>1762, 13701=>735, 13702=>1329, 13703=>1210, 13714=>1181, 13715=>1571, 13716=>719, 13717=>1690, 13718=>1690, 13719=>1177, 13720=>1528, 13721=>1410, 13722=>1446, 13723=>1550, 13724=>605, 13725=>1556, 13726=>366, 13727=>962, 13728=>544, 13729=>1779, 13677=>516, 13678=>618, 13679=>834, 13680=>849, 13681=>301, 13682=>915, 13683=>516, 13684=>980, 13685=>1008, 13686=>4, 13687=>688, 13688=>871, 13689=>995}, 18=>{13678=>453, 13679=>357, 13680=>1102, 13681=>684, 13682=>213, 13683=>604, 13684=>212, 13685=>65, 13686=>968, 13687=>281, 13689=>32, 13690=>539, 13691=>1758, 13692=>1880, 13693=>259, 13694=>536, 13695=>1874, 13696=>910, 13697=>923, 13698=>1778, 13707=>1727, 13708=>1307, 13709=>411, 13710=>1817, 13711=>1402, 13712=>1734, 13713=>1278, 13714=>1315, 13715=>1705, 13716=>402, 13728=>1004, 13729=>1739, 13703=>1344, 13704=>2147, 13705=>894, 13706=>464, 13717=>1824, 13718=>1824, 13719=>1311, 13720=>1662, 13721=>1544, 13722=>1580, 13723=>1684, 13724=>518, 13725=>1690, 13726=>734, 13727=>1337, 13677=>604, 13688=>1163, 13699=>377, 13700=>1896, 13701=>377, 13702=>1463}, 19=>{13708=>1107, 13709=>714, 13710=>1617, 13711=>1202, 13712=>1534, 13713=>1078, 13714=>1115, 13715=>1505, 13716=>653, 13717=>1624, 13685=>771, 13686=>267, 13687=>431, 13688=>805, 13689=>738, 13690=>189, 13691=>2051, 13692=>1680, 13693=>809, 13694=>829, 13677=>450, 13678=>552, 13679=>768, 13680=>783, 13681=>30, 13682=>849, 13683=>450, 13684=>914, 13700=>1696, 13701=>669, 13702=>1263, 13703=>1144, 13704=>2440, 13705=>193, 13706=>661, 13707=>1527, 13718=>1624, 13719=>1111, 13721=>1344, 13722=>1380, 13723=>1484, 13724=>539, 13725=>1490, 13726=>300, 13727=>906, 13728=>478, 13729=>1713, 13695=>1674, 13696=>359, 13697=>346, 13698=>1701, 13699=>669, 13720=>1462}, 20=>{13686=>1036, 13687=>1223, 13688=>183, 13689=>1346, 13690=>1168, 13691=>2871, 13692=>1878, 13693=>1110, 13694=>1808, 13695=>1872, 13720=>1660, 13721=>1542, 13722=>1578, 13723=>1682, 13724=>836, 13725=>1688, 13726=>904, 13727=>141, 13728=>489, 13729=>1911, 13683=>821, 13684=>1168, 13685=>1292, 13696=>1085, 13697=>1067, 13698=>1899, 13699=>1019, 13700=>1894, 13701=>1019, 13702=>1461, 13709=>968, 13710=>1815, 13711=>1400, 13712=>1732, 13713=>1276, 13714=>1313, 13715=>1703, 13716=>963, 13717=>1822, 13718=>1822, 13677=>821, 13704=>3260, 13705=>962, 13706=>915, 13707=>1725, 13708=>1305, 13719=>1309, 13678=>902, 13679=>1022, 13680=>281, 13681=>1009, 13682=>1199, 13703=>1342}, 21=>{13690=>800, 13691=>2662, 13692=>1903, 13693=>1032, 13694=>1440, 13695=>1897, 13696=>717, 13697=>699, 13698=>1924, 13699=>892, 13711=>1425, 13712=>1757, 13713=>1301, 13714=>1338, 13715=>1728, 13716=>876, 13717=>1847, 13718=>1847, 13719=>1334, 13720=>1685, 13725=>1713, 13726=>523, 13727=>294, 13728=>121, 13729=>1936, 13677=>673, 13678=>775, 13679=>991, 13680=>290, 13707=>1750, 13708=>1330, 13709=>937, 13710=>1840, 13721=>1567, 13722=>1603, 13723=>1707, 13724=>762, 13681=>641, 13682=>1072, 13683=>673, 13684=>1137, 13685=>1195, 13686=>668, 13687=>855, 13688=>312, 13689=>1162, 13700=>1919, 13701=>892, 13702=>1486, 13703=>1367, 13704=>3051, 13705=>594, 13706=>884}, 22=>{13720=>1604, 13721=>1486, 13722=>1522, 13723=>1626, 13724=>681, 13725=>1632, 13726=>442, 13727=>781, 13728=>478, 13729=>1855, 13681=>377, 13682=>991, 13683=>592, 13684=>1056, 13685=>1084, 13686=>211, 13687=>764, 13688=>754, 13689=>1071, 13690=>536, 13677=>592, 13678=>694, 13679=>910, 13680=>732, 13691=>2307, 13707=>1669, 13708=>1249, 13709=>856, 13710=>1759, 13711=>1344, 13712=>1676, 13713=>1220, 13714=>1257, 13715=>1647, 13716=>795, 13692=>1822, 13693=>951, 13705=>185, 13706=>803, 13717=>1766, 13718=>1766, 13719=>1253, 13700=>1838, 13701=>811, 13702=>1405, 13703=>1286, 13704=>2696, 13694=>1034, 13695=>1816, 13696=>234, 13697=>216, 13698=>1843, 13699=>811}, 23=>{13706=>1437, 13707=>2247, 13708=>1827, 13709=>1490, 13710=>2337, 13711=>1922, 13712=>2254, 13713=>1798, 13714=>1835, 13715=>2225, 13681=>1204, 13682=>1675, 13683=>1276, 13684=>1690, 13685=>1798, 13686=>1231, 13687=>1458, 13688=>798, 13689=>1765, 13690=>1363, 13693=>1632, 13694=>2003, 13695=>2394, 13696=>1280, 13697=>1262, 13698=>2421, 13699=>1495, 13700=>2416, 13701=>1495, 13702=>1983, 13677=>1276, 13678=>1378, 13679=>1544, 13680=>776, 13691=>3225, 13720=>2182, 13721=>2064, 13722=>2100, 13723=>2204, 13724=>1358, 13725=>2210, 13726=>1126, 13727=>760, 13728=>724, 13729=>2433, 13692=>2400, 13703=>1864, 13704=>3614, 13705=>1157, 13716=>1485, 13717=>2344, 13718=>2344, 13719=>1831}, 24=>{13703=>1144, 13704=>2439, 13705=>193, 13706=>661, 13707=>1527, 13708=>1107, 13709=>714, 13710=>1617, 13711=>1202, 13712=>1534, 13690=>188, 13691=>2050, 13692=>1680, 13693=>809, 13694=>828, 13695=>1674, 13696=>359, 13697=>346, 13698=>1701, 13699=>669, 13714=>1115, 13715=>1505, 13716=>653, 13717=>1624, 13718=>1624, 13719=>1111, 13720=>1462, 13721=>1344, 13722=>1380, 13723=>1484, 13683=>450, 13684=>914, 13685=>770, 13686=>267, 13687=>430, 13688=>805, 13689=>737, 13700=>1696, 13701=>669, 13702=>1263, 13677=>450, 13678=>552, 13679=>768, 13680=>783, 13681=>29, 13682=>849, 13713=>1078, 13724=>539, 13725=>1490, 13726=>300, 13727=>906, 13728=>478, 13729=>1713}, 25=>{13683=>1285, 13684=>1323, 13685=>1170, 13686=>765, 13687=>947, 13688=>1590, 13689=>1137, 13690=>705, 13691=>2112, 13692=>2515, 13704=>2480, 13705=>839, 13706=>1310, 13707=>2362, 13708=>1942, 13709=>1337, 13710=>2280, 13711=>2037, 13712=>2369, 13713=>1913, 13718=>2459, 13719=>1946, 13720=>2297, 13721=>2179, 13722=>2215, 13723=>2319, 13724=>1188, 13725=>2325, 13726=>1135, 13727=>1617, 13693=>1364, 13694=>917, 13695=>2255, 13696=>672, 13697=>685, 13698=>2132, 13699=>1295, 13700=>2232, 13701=>1295, 13702=>2098, 13677=>1285, 13678=>1178, 13679=>1391, 13680=>1568, 13681=>850, 13682=>1318, 13703=>1979, 13714=>1950, 13715=>2340, 13716=>1279, 13717=>2314, 13728=>1313, 13729=>2093}, 26=>{13723=>2355, 13724=>1447, 13725=>2349, 13726=>1394, 13727=>1876, 13728=>1572, 13729=>1961, 13704=>2348, 13705=>1098, 13706=>1456, 13707=>2253, 13708=>2201, 13709=>1406, 13710=>2148, 13711=>2296, 13712=>2453, 13713=>2172, 13703=>2238, 13714=>2209, 13715=>2599, 13716=>1419, 13717=>2182, 13718=>2718, 13719=>2205, 13720=>2300, 13721=>2438, 13722=>2316, 13681=>1113, 13682=>1230, 13683=>1544, 13684=>1235, 13685=>1082, 13686=>1024, 13687=>1078, 13688=>1849, 13689=>1049, 13690=>956, 13700=>2100, 13701=>1394, 13702=>2357, 13691=>1980, 13692=>2774, 13693=>1276, 13694=>755, 13695=>2123, 13696=>931, 13697=>944, 13698=>2000, 13699=>1394, 13677=>1544, 13678=>1437, 13679=>1352, 13680=>1827}, 27=>{13677=>1112, 13678=>1214, 13679=>1430, 13680=>1395, 13681=>720, 13682=>1368, 13683=>1112, 13684=>1373, 13685=>1220, 13686=>592, 13693=>1471, 13694=>960, 13695=>2336, 13696=>499, 13697=>512, 13698=>2223, 13699=>1331, 13700=>2323, 13701=>1331, 13702=>1925, 13714=>1777, 13715=>2167, 13716=>1315, 13717=>2286, 13718=>2286, 13719=>1773, 13720=>2124, 13721=>2006, 13722=>2042, 13723=>2146, 13687=>982, 13710=>2279, 13711=>1864, 13712=>2196, 13713=>1740, 13724=>1201, 13725=>2152, 13726=>962, 13727=>1444, 13728=>1140, 13729=>2184, 13688=>1417, 13689=>1187, 13690=>740, 13691=>2203, 13692=>2342, 13703=>1806, 13704=>2592, 13705=>666, 13706=>1323, 13707=>2189, 13708=>1769, 13709=>1376}, 28=>{13686=>1098, 13687=>775, 13688=>1825, 13689=>746, 13690=>829, 13691=>1596, 13692=>2496, 13693=>973, 13694=>353, 13695=>1739, 13683=>1343, 13684=>932, 13685=>779, 13696=>1005, 13697=>1018, 13698=>1616, 13699=>1091, 13700=>1716, 13701=>1091, 13702=>2183, 13707=>1869, 13708=>2027, 13709=>1103, 13710=>1764, 13711=>2122, 13712=>2069, 13713=>1998, 13714=>2035, 13715=>2425, 13716=>1116, 13728=>1498, 13729=>1577, 13720=>1916, 13721=>2264, 13722=>1932, 13723=>1971, 13724=>1232, 13725=>1965, 13726=>1315, 13727=>1921, 13677=>1343, 13678=>1167, 13679=>1049, 13680=>1803, 13681=>986, 13682=>927, 13703=>2064, 13704=>1985, 13705=>1092, 13706=>1153, 13717=>1798, 13718=>2544, 13719=>2031}, 29=>{13727=>1251, 13728=>833, 13729=>1806, 13677=>713, 13678=>644, 13679=>857, 13680=>1138, 13681=>316, 13682=>901, 13683=>713, 13684=>906, 13690=>171, 13691=>1825, 13692=>2035, 13693=>901, 13694=>552, 13695=>1968, 13696=>299, 13697=>312, 13698=>1845, 13699=>761, 13711=>1557, 13712=>1889, 13713=>1433, 13714=>1470, 13715=>1860, 13716=>745, 13717=>1979, 13718=>1979, 13719=>1466, 13720=>1817, 13685=>753, 13686=>371, 13701=>761, 13702=>1618, 13703=>1499, 13704=>2214, 13705=>357, 13706=>776, 13707=>1882, 13708=>1462, 13709=>803, 13710=>1972, 13687=>413, 13688=>1160, 13689=>720, 13700=>1945, 13721=>1699, 13722=>1735, 13723=>1839, 13724=>654, 13725=>1845, 13726=>655}, 30=>{13686=>673, 13687=>1061, 13688=>780, 13689=>1368, 13690=>847, 13691=>2709, 13692=>2119, 13693=>1248, 13694=>1487, 13695=>2113, 13677=>889, 13678=>991, 13679=>1207, 13680=>758, 13681=>688, 13682=>1288, 13683=>889, 13699=>1108, 13700=>2135, 13701=>1108, 13702=>1702, 13703=>1583, 13704=>3098, 13705=>641, 13706=>1100, 13707=>1966, 13708=>1546, 13710=>2056, 13711=>1641, 13712=>1973, 13713=>1517, 13714=>1554, 13715=>1944, 13716=>1092, 13717=>2063, 13718=>2063, 13719=>1550, 13724=>978, 13725=>1929, 13726=>739, 13727=>752, 13728=>480, 13729=>2152, 13720=>1901, 13721=>1783, 13722=>1819, 13723=>1923, 13684=>1353, 13685=>1381, 13696=>696, 13697=>678, 13698=>2140, 13709=>1153}, 31=>{13724=>709, 13725=>1561, 13726=>594, 13727=>320, 13728=>241, 13729=>1784, 13677=>694, 13678=>775, 13679=>895, 13680=>127, 13697=>825, 13698=>1772, 13699=>892, 13700=>1767, 13701=>892, 13702=>1334, 13703=>1215, 13704=>3128, 13705=>672, 13706=>788, 13711=>1273, 13712=>1605, 13713=>1149, 13714=>1186, 13715=>1576, 13716=>836, 13717=>1695, 13718=>1695, 13719=>1182, 13720=>1533, 13681=>714, 13682=>1072, 13683=>694, 13684=>1041, 13685=>1165, 13686=>746, 13694=>1517, 13695=>1745, 13696=>838, 13707=>1598, 13708=>1178, 13709=>841, 13710=>1688, 13721=>1415, 13722=>1451, 13723=>1555, 13687=>926, 13688=>149, 13689=>1233, 13690=>873, 13691=>2739, 13692=>1751, 13693=>983}, 32=>{13704=>3229, 13705=>772, 13706=>925, 13707=>1735, 13708=>1315, 13709=>978, 13710=>1825, 13711=>1410, 13712=>1742, 13713=>1286, 13677=>851, 13678=>912, 13679=>1032, 13680=>296, 13694=>1618, 13695=>1882, 13696=>895, 13697=>877, 13698=>1909, 13699=>1029, 13700=>1904, 13701=>1029, 13702=>1471, 13703=>1352, 13722=>1588, 13723=>1692, 13724=>846, 13725=>1698, 13726=>701, 13727=>116, 13728=>299, 13729=>1921, 13714=>1323, 13715=>1713, 13716=>973, 13717=>1832, 13718=>1832, 13719=>1319, 13720=>1670, 13721=>1552, 13681=>819, 13682=>1209, 13683=>851, 13684=>1178, 13685=>1302, 13686=>846, 13687=>1033, 13688=>198, 13689=>1340, 13690=>978, 13691=>2840, 13692=>1888, 13693=>1120}, 33=>{13706=>778, 13707=>1884, 13708=>1464, 13709=>805, 13710=>1974, 13711=>1559, 13712=>1891, 13713=>1435, 13714=>1472, 13715=>1862, 13677=>715, 13678=>646, 13690=>173, 13691=>1823, 13692=>2037, 13693=>903, 13694=>550, 13695=>1966, 13696=>297, 13697=>310, 13698=>1843, 13699=>763, 13721=>1701, 13722=>1737, 13723=>1841, 13724=>656, 13725=>1847, 13726=>657, 13727=>1253, 13728=>835, 13729=>1804, 13679=>859, 13680=>1140, 13702=>1620, 13703=>1501, 13704=>2212, 13705=>359, 13716=>747, 13717=>1981, 13718=>1981, 13719=>1468, 13720=>1819, 13681=>318, 13682=>903, 13683=>715, 13684=>908, 13685=>755, 13686=>373, 13687=>415, 13688=>1162, 13689=>722, 13700=>1943, 13701=>763}, 34=>{13713=>1895, 13714=>1857, 13715=>2336, 13716=>961, 13717=>1475, 13718=>2374, 13719=>1861, 13720=>1593, 13721=>2143, 13722=>1609, 13684=>777, 13685=>624, 13686=>953, 13687=>620, 13688=>1670, 13689=>591, 13690=>674, 13691=>1273, 13692=>2173, 13693=>818, 13677=>1188, 13683=>1188, 13694=>50, 13695=>1416, 13696=>860, 13697=>873, 13698=>1293, 13699=>936, 13700=>1393, 13701=>936, 13702=>2028, 13724=>1077, 13725=>1642, 13726=>1160, 13727=>1766, 13728=>1343, 13729=>1254, 13678=>1012, 13704=>1662, 13705=>960, 13706=>998, 13707=>1546, 13708=>1866, 13709=>948, 13710=>1441, 13711=>1967, 13712=>1746, 13723=>1648, 13679=>894, 13680=>1648, 13681=>831, 13682=>772, 13703=>1842}, 35=>{13706=>1808, 13707=>2618, 13708=>2198, 13709=>1861, 13710=>2708, 13711=>2293, 13712=>2625, 13713=>2169, 13714=>2206, 13715=>2596, 13677=>1652, 13678=>1754, 13679=>1915, 13680=>1147, 13690=>1686, 13691=>3548, 13692=>2771, 13693=>2003, 13694=>2326, 13695=>2765, 13696=>1535, 13697=>1517, 13698=>2792, 13699=>1871, 13721=>2435, 13722=>2471, 13723=>2575, 13724=>1729, 13725=>2581, 13726=>1502, 13727=>1023, 13728=>1100, 13729=>2804, 13704=>3937, 13705=>1480, 13716=>1856, 13717=>2715, 13718=>2715, 13719=>2202, 13720=>2553, 13681=>1527, 13682=>2051, 13683=>1652, 13684=>2061, 13685=>2174, 13686=>1512, 13687=>1834, 13688=>1169, 13689=>2141, 13700=>2787, 13701=>1871, 13702=>2354, 13703=>2235}, 36=>{13677=>347, 13690=>681, 13691=>1876, 13692=>1631, 13693=>61, 13694=>782, 13695=>1625, 13696=>903, 13697=>890, 13698=>1652, 13699=>120, 13704=>2265, 13705=>737, 13706=>182, 13707=>1478, 13708=>1058, 13709=>191, 13710=>1568, 13711=>1153, 13712=>1485, 13713=>1029, 13725=>1441, 13726=>477, 13727=>1080, 13728=>837, 13729=>1664, 13678=>196, 13679=>137, 13680=>845, 13701=>120, 13702=>1214, 13703=>1095, 13714=>1066, 13715=>1456, 13716=>145, 13717=>1575, 13718=>1575, 13719=>1062, 13720=>1413, 13681=>779, 13682=>101, 13683=>347, 13684=>173, 13685=>194, 13686=>811, 13687=>527, 13688=>906, 13689=>248, 13700=>1647, 13721=>1295, 13722=>1331, 13723=>1435, 13724=>261}, 37=>{13696=>932, 13697=>945, 13698=>1212, 13699=>982, 13700=>1312, 13701=>982, 13702=>2056, 13703=>1761, 13704=>1581, 13705=>1047, 13728=>1389, 13729=>1173, 13677=>1234, 13678=>1058, 13679=>940, 13680=>1694, 13681=>877, 13690=>720, 13691=>1192, 13692=>2092, 13693=>864, 13694=>137, 13695=>1335, 13706=>1044, 13707=>1465, 13708=>1785, 13709=>994, 13721=>2062, 13722=>1528, 13723=>1567, 13724=>1123, 13725=>1561, 13726=>1206, 13727=>1812, 13682=>818, 13683=>1234, 13684=>823, 13685=>670, 13686=>1025, 13687=>666, 13688=>1716, 13689=>637, 13710=>1360, 13711=>1995, 13712=>1665, 13713=>1814, 13714=>1776, 13715=>2255, 13716=>1007, 13717=>1394, 13718=>2293, 13719=>1780, 13720=>1512}, 38=>{13725=>1690, 13726=>500, 13727=>1096, 13728=>678, 13729=>1913, 13677=>558, 13678=>489, 13679=>702, 13680=>983, 13681=>161, 13682=>746, 13683=>558, 13684=>751, 13685=>598, 13686=>437, 13687=>258, 13698=>1901, 13699=>606, 13700=>1896, 13701=>606, 13702=>1463, 13703=>1344, 13704=>2267, 13705=>383, 13706=>621, 13707=>1727, 13719=>1311, 13720=>1662, 13721=>1544, 13722=>1580, 13723=>1684, 13724=>499, 13688=>1005, 13689=>565, 13690=>16, 13691=>1878, 13692=>1880, 13693=>746, 13694=>656, 13695=>1874, 13696=>451, 13697=>464, 13708=>1307, 13709=>648, 13710=>1817, 13711=>1402, 13712=>1734, 13713=>1278, 13714=>1315, 13715=>1705, 13716=>590, 13717=>1824, 13718=>1824}, 39=>{13677=>64, 13678=>87, 13679=>309, 13680=>595, 13681=>496, 13682=>384, 13683=>64, 13684=>455, 13685=>477, 13695=>1385, 13696=>620, 13697=>607, 13698=>1412, 13699=>204, 13700=>1407, 13701=>204, 13702=>974, 13703=>855, 13704=>2547, 13709=>255, 13710=>1328, 13711=>913, 13712=>1245, 13713=>789, 13714=>826, 13715=>1216, 13716=>188, 13717=>1335, 13718=>1335, 13724=>80, 13725=>1201, 13726=>194, 13727=>830, 13728=>554, 13729=>1424, 13686=>528, 13687=>497, 13688=>656, 13689=>531, 13690=>483, 13691=>2158, 13692=>1391, 13693=>344, 13694=>1065, 13705=>454, 13706=>202, 13707=>1238, 13708=>818, 13719=>822, 13720=>1173, 13721=>1055, 13722=>1091, 13723=>1195}, 40=>{13699=>610, 13700=>1900, 13701=>610, 13702=>1467, 13703=>1348, 13704=>2271, 13705=>387, 13706=>625, 13707=>1731, 13708=>1311, 13677=>562, 13678=>493, 13679=>706, 13680=>987, 13697=>460, 13698=>1905, 13709=>652, 13710=>1821, 13711=>1406, 13712=>1738, 13713=>1282, 13714=>1319, 13715=>1709, 13716=>594, 13721=>1548, 13722=>1584, 13723=>1688, 13724=>503, 13725=>1694, 13726=>504, 13727=>1100, 13728=>682, 13729=>1917, 13681=>165, 13682=>750, 13683=>562, 13684=>755, 13685=>602, 13686=>433, 13687=>262, 13688=>1009, 13689=>569, 13690=>20, 13691=>1882, 13692=>1884, 13693=>750, 13694=>660, 13695=>1878, 13696=>447, 13717=>1828, 13718=>1828, 13719=>1315, 13720=>1666}, 41=>{13708=>1340, 13709=>947, 13710=>1850, 13711=>1435, 13712=>1767, 13713=>1311, 13714=>1348, 13715=>1738, 13716=>886, 13717=>1857, 13677=>683, 13690=>405, 13691=>2030, 13692=>1913, 13693=>1042, 13694=>757, 13695=>1907, 13696=>70, 13697=>83, 13698=>1934, 13699=>902, 13704=>2419, 13705=>237, 13706=>894, 13707=>1760, 13718=>1857, 13719=>1344, 13720=>1695, 13721=>1577, 13722=>1613, 13723=>1717, 13678=>785, 13679=>1001, 13680=>1011, 13681=>326, 13682=>1051, 13683=>683, 13684=>1056, 13685=>903, 13686=>163, 13687=>647, 13688=>1033, 13689=>870, 13700=>1929, 13701=>902, 13702=>1496, 13703=>1377, 13724=>772, 13725=>1723, 13726=>533, 13727=>1060, 13728=>711, 13729=>1946}, 42=>{13692=>1728, 13693=>99, 13694=>682, 13695=>1722, 13696=>1000, 13697=>987, 13698=>1749, 13699=>217, 13700=>1744, 13701=>217, 13683=>444, 13684=>211, 13685=>94, 13686=>908, 13687=>427, 13688=>1003, 13689=>148, 13690=>685, 13691=>1904, 13702=>1311, 13707=>1575, 13708=>1155, 13709=>229, 13710=>1665, 13711=>1250, 13712=>1582, 13713=>1126, 13714=>1163, 13715=>1553, 13716=>242, 13728=>934, 13729=>1761, 13677=>444, 13678=>293, 13679=>175, 13680=>942, 13681=>830, 13682=>53, 13703=>1192, 13704=>2293, 13705=>834, 13706=>279, 13717=>1672, 13718=>1672, 13719=>1159, 13720=>1510, 13721=>1392, 13722=>1428, 13723=>1532, 13724=>358, 13725=>1538, 13726=>574, 13727=>1177}, 43=>{13694=>1725, 13695=>1772, 13696=>1002, 13697=>984, 13698=>1799, 13699=>919, 13700=>1794, 13701=>919, 13702=>1361, 13703=>1242, 13677=>721, 13678=>802, 13679=>922, 13680=>186, 13681=>926, 13682=>1099, 13683=>721, 13684=>1068, 13707=>1625, 13708=>1205, 13709=>868, 13710=>1715, 13711=>1300, 13712=>1632, 13713=>1176, 13714=>1213, 13715=>1603, 13716=>863, 13721=>1442, 13722=>1478, 13723=>1582, 13724=>736, 13725=>1588, 13726=>789, 13727=>114, 13728=>406, 13729=>1811, 13685=>1192, 13686=>941, 13687=>1121, 13688=>88, 13689=>1246, 13690=>1085, 13691=>2771, 13692=>1778, 13693=>1010, 13704=>3160, 13705=>867, 13706=>815, 13717=>1722, 13718=>1722, 13719=>1209, 13720=>1560}, 44=>{13677=>1483, 13690=>1441, 13691=>3303, 13692=>2713, 13693=>1842, 13694=>2081, 13695=>2707, 13696=>1290, 13697=>1272, 13698=>2734, 13699=>1702, 13704=>3692, 13705=>1235, 13706=>1694, 13707=>2560, 13708=>2140, 13709=>1747, 13710=>2650, 13711=>2235, 13712=>2567, 13713=>2111, 13725=>2523, 13726=>1333, 13727=>1192, 13728=>930, 13729=>2746, 13678=>1585, 13679=>1801, 13680=>1195, 13681=>1282, 13682=>1882, 13683=>1483, 13684=>1947, 13685=>1975, 13686=>1267, 13687=>1664, 13688=>1217, 13689=>1971, 13700=>2729, 13701=>1702, 13702=>2296, 13703=>2177, 13714=>2148, 13715=>2538, 13716=>1686, 13717=>2657, 13718=>2657, 13719=>2144, 13720=>2495, 13721=>2377, 13722=>2413, 13723=>2517, 13724=>1572}, 45=>{13725=>1556, 13726=>366, 13727=>962, 13728=>544, 13729=>1779, 13719=>1177, 13720=>1528, 13721=>1410, 13722=>1446, 13723=>1550, 13724=>605, 13688=>871, 13689=>995, 13690=>460, 13691=>2200, 13692=>1746, 13693=>875, 13694=>927, 13695=>1740, 13696=>96, 13697=>83, 13677=>516, 13678=>618, 13679=>834, 13680=>849, 13681=>301, 13700=>1762, 13701=>735, 13702=>1329, 13703=>1210, 13704=>2589, 13705=>70, 13706=>727, 13707=>1593, 13708=>1173, 13709=>780, 13682=>915, 13683=>516, 13684=>980, 13685=>1008, 13686=>4, 13687=>688, 13698=>1767, 13699=>735, 13710=>1683, 13711=>1268, 13712=>1600, 13713=>1144, 13714=>1181, 13715=>1571, 13716=>719, 13717=>1690, 13718=>1690}, 3=>{13677=>181, 13678=>283, 13679=>499, 13680=>623, 13681=>309, 13682=>580, 13683=>181, 13684=>645, 13685=>673, 13692=>1419, 13693=>540, 13694=>1108, 13695=>1413, 13696=>433, 13697=>420, 13698=>1440, 13699=>400, 13700=>1435, 13701=>400, 13706=>392, 13707=>1266, 13708=>846, 13709=>445, 13710=>1356, 13711=>941, 13712=>1273, 13713=>817, 13714=>854, 13715=>1244, 13727=>791, 13728=>367, 13729=>1452, 13686=>341, 13687=>511, 13688=>684, 13689=>727, 13690=>468, 13691=>2330, 13702=>1002, 13703=>883, 13704=>2719, 13705=>267, 13716=>384, 13717=>1363, 13718=>1363, 13719=>850, 13720=>1201, 13721=>1083, 13722=>1119, 13723=>1223, 13724=>270, 13725=>1229, 13726=>31}, 46=>{13677=>1444, 13678=>1515, 13679=>1633, 13680=>1705, 13681=>1787, 13682=>1812, 13683=>1444, 13696=>1911, 13697=>1898, 13698=>147, 13699=>1632, 13700=>260, 13701=>1632, 13702=>900, 13703=>605, 13704=>1835, 13705=>1745, 13711=>839, 13712=>509, 13713=>658, 13714=>620, 13715=>1099, 13716=>1574, 13717=>332, 13718=>1137, 13719=>624, 13720=>356, 13684=>1768, 13685=>1813, 13686=>1819, 13687=>1809, 13688=>1766, 13689=>1780, 13690=>1863, 13691=>1400, 13692=>936, 13693=>1721, 13694=>1339, 13695=>283, 13706=>1526, 13707=>309, 13708=>629, 13709=>1579, 13710=>282, 13721=>906, 13722=>372, 13723=>411, 13724=>1449, 13725=>405, 13726=>1527, 13727=>1940, 13728=>1845, 13729=>207}}
    btb = {13677=>{13678=>151, 13679=>367, 13680=>569, 13681=>479, 13682=>448, 13684=>513, 13685=>541, 13686=>511, 13687=>569, 13688=>630, 13689=>595, 13690=>555, 13691=>2216, 13692=>1365, 13693=>408, 13694=>1155, 13695=>1359, 13696=>603, 13697=>590, 13698=>1386, 13699=>268, 13700=>1381, 13701=>268, 13702=>948, 13703=>829, 13704=>2605, 13705=>437, 13706=>260, 13707=>1212, 13708=>792, 13709=>313, 13710=>1302, 13711=>887, 13712=>1219, 13713=>763, 13714=>800, 13715=>1190, 13716=>252, 13717=>1309, 13718=>1309, 13719=>796, 13720=>1147, 13721=>1029, 13722=>1065, 13723=>1169, 13724=>138, 13725=>1175, 13726=>177, 13727=>804, 13728=>537, 13729=>1398}, 13678=>{13677=>151, 13679=>213, 13680=>649, 13681=>583, 13682=>297, 13683=>151, 13684=>359, 13685=>390, 13686=>615, 13687=>499, 13688=>710, 13689=>444, 13690=>485, 13691=>2062, 13692=>1435, 13693=>257, 13694=>978, 13695=>1429, 13696=>707, 13697=>694, 13698=>1456, 13699=>117, 13700=>1451, 13701=>117, 13702=>1018, 13703=>899, 13704=>2451, 13705=>541, 13706=>138, 13707=>1282, 13708=>862, 13709=>159, 13710=>1372, 13711=>957, 13712=>1289, 13713=>833, 13714=>870, 13715=>1260, 13716=>101, 13717=>1379, 13718=>1379, 13719=>866, 13720=>1217, 13721=>1099, 13722=>1135, 13723=>1239, 13724=>65, 13725=>1245, 13726=>281, 13727=>884, 13728=>641, 13729=>1468}, 13679=>{13677=>379, 13678=>225, 13680=>780, 13681=>811, 13682=>192, 13683=>379, 13684=>146, 13685=>285, 13686=>843, 13687=>618, 13688=>841, 13689=>339, 13690=>710, 13691=>1849, 13692=>1566, 13693=>88, 13694=>873, 13695=>1560, 13696=>935, 13697=>922, 13698=>1587, 13699=>190, 13700=>1582, 13701=>190, 13702=>1149, 13703=>1030, 13704=>2238, 13705=>769, 13706=>107, 13712=>1420, 13713=>964, 13714=>1001, 13715=>1391, 13716=>123, 13717=>1510, 13718=>1510, 13719=>997, 13720=>1348, 13721=>1230, 13727=>1015, 13728=>869, 13729=>1599, 13707=>1413, 13708=>993, 13709=>54, 13710=>1503, 13711=>1088, 13722=>1266, 13723=>1370, 13724=>241, 13725=>1376, 13726=>509}, 13680=>{13677=>568, 13678=>649, 13679=>769, 13681=>810, 13682=>946, 13683=>568, 13684=>915, 13685=>1039, 13686=>842, 13687=>1022, 13688=>95, 13689=>1093, 13690=>969, 13691=>2618, 13692=>1625, 13693=>857, 13694=>1613, 13695=>1619, 13696=>934, 13697=>921, 13698=>1646, 13699=>766, 13700=>1641, 13701=>766, 13702=>1208, 13703=>1089, 13704=>3007, 13705=>768, 13706=>662, 13707=>1472, 13708=>1052, 13709=>715, 13710=>1562, 13711=>1147, 13712=>1479, 13713=>1023, 13714=>1060, 13715=>1450, 13716=>710, 13717=>1569, 13718=>1569, 13719=>1056, 13720=>1407, 13721=>1289, 13722=>1325, 13723=>1429, 13724=>583, 13725=>1435, 13726=>651, 13727=>269, 13728=>337, 13729=>1658}, 13681=>{13677=>479, 13678=>581, 13679=>797, 13680=>812, 13682=>878, 13683=>479, 13684=>894, 13685=>741, 13686=>296, 13687=>401, 13688=>834, 13689=>708, 13690=>159, 13691=>2021, 13692=>1709, 13693=>838, 13694=>799, 13695=>1703, 13696=>388, 13697=>375, 13698=>1730, 13699=>698, 13700=>1725, 13701=>698, 13702=>1292, 13703=>1173, 13704=>2410, 13705=>222, 13706=>690, 13707=>1556, 13708=>1136, 13709=>743, 13710=>1646, 13711=>1231, 13712=>1563, 13713=>1107, 13714=>1144, 13715=>1534, 13716=>682, 13717=>1653, 13718=>1653, 13719=>1140, 13720=>1491, 13721=>1373, 13722=>1409, 13723=>1513, 13724=>568, 13725=>1519, 13726=>329, 13727=>935, 13728=>507, 13729=>1742}, 13682=>{13677=>448, 13678=>297, 13679=>179, 13680=>946, 13681=>880, 13683=>448, 13684=>215, 13685=>150, 13686=>912, 13687=>483, 13688=>1007, 13689=>204, 13690=>741, 13691=>1918, 13692=>1732, 13693=>103, 13694=>738, 13695=>1726, 13696=>1004, 13697=>991, 13698=>1753, 13699=>221, 13700=>1748, 13701=>221, 13702=>1315, 13703=>1196, 13704=>2307, 13705=>838, 13706=>283, 13707=>1579, 13708=>1159, 13709=>233, 13710=>1669, 13711=>1254, 13712=>1586, 13713=>1130, 13714=>1167, 13715=>1557, 13716=>246, 13717=>1676, 13718=>1676, 13719=>1163, 13720=>1514, 13721=>1396, 13722=>1432, 13723=>1536, 13724=>362, 13725=>1542, 13726=>578, 13727=>1181, 13728=>938, 13729=>1765}, 13683=>{13678=>151, 13679=>367, 13680=>569, 13681=>479, 13682=>448, 13684=>513, 13685=>541, 13686=>511, 13687=>569, 13688=>630, 13689=>595, 13690=>555, 13691=>2216, 13692=>1365, 13693=>408, 13694=>1155, 13695=>1359, 13696=>603, 13697=>590, 13698=>1386, 13699=>268, 13700=>1381, 13701=>268, 13702=>948, 13703=>829, 13704=>2605, 13705=>437, 13706=>260, 13707=>1212, 13708=>792, 13709=>313, 13710=>1302, 13711=>887, 13712=>1219, 13713=>763, 13714=>800, 13723=>1169, 13724=>138, 13725=>1175, 13726=>177, 13727=>804, 13728=>537, 13729=>1398, 13715=>1190, 13716=>252, 13717=>1309, 13718=>1309, 13719=>796, 13720=>1147, 13722=>1065, 13721=>1029}, 13684=>{13677=>524, 13678=>370, 13679=>145, 13682=>227, 13683=>524, 13685=>284, 13686=>988, 13687=>500, 13688=>986, 13689=>251, 13690=>758, 13691=>1865, 13692=>1698, 13693=>123, 13694=>755, 13695=>1692, 13696=>1080, 13697=>1067, 13698=>1719, 13699=>305, 13700=>1714, 13701=>305, 13702=>1281, 13703=>1162, 13704=>2254, 13705=>914, 13706=>252, 13707=>1545, 13708=>1125, 13709=>199, 13710=>1635, 13711=>1220, 13712=>1552, 13713=>1096, 13714=>1133, 13715=>1523, 13716=>268, 13717=>1642, 13718=>1642, 13719=>1129, 13720=>1480, 13721=>1362, 13722=>1398, 13723=>1502, 13724=>386, 13725=>1508, 13726=>654, 13727=>1160, 13728=>1014, 13729=>1731, 13680=>925, 13681=>903}, 13685=>{13677=>539, 13678=>388, 13679=>270, 13680=>1037, 13681=>736, 13682=>148, 13683=>539, 13684=>270, 13686=>1003, 13687=>333, 13688=>1098, 13689=>54, 13690=>591, 13691=>1810, 13692=>1823, 13693=>194, 13694=>588, 13695=>1817, 13696=>962, 13697=>975, 13698=>1844, 13699=>312, 13700=>1839, 13701=>312, 13702=>1406, 13703=>1287, 13704=>2199, 13705=>929, 13706=>374, 13707=>1670, 13708=>1250, 13709=>324, 13710=>1760, 13711=>1345, 13712=>1677, 13713=>1221, 13714=>1258, 13715=>1648, 13716=>337, 13717=>1767, 13718=>1767, 13719=>1254, 13720=>1605, 13721=>1487, 13722=>1523, 13723=>1627, 13724=>453, 13725=>1633, 13726=>669, 13727=>1272, 13728=>1056, 13729=>1791}, 13686=>{13677=>520, 13678=>622, 13679=>838, 13680=>853, 13681=>305, 13682=>919, 13683=>520, 13684=>984, 13685=>1012, 13687=>692, 13688=>875, 13689=>999, 13690=>464, 13691=>2196, 13692=>1750, 13693=>879, 13694=>923, 13695=>1744, 13696=>92, 13697=>79, 13698=>1771, 13699=>739, 13700=>1766, 13701=>739, 13702=>1333, 13703=>1214, 13704=>2585, 13705=>73, 13706=>731, 13707=>1597, 13708=>1177, 13709=>784, 13710=>1687, 13711=>1272, 13712=>1604, 13713=>1148, 13714=>1185, 13715=>1575, 13716=>723, 13717=>1694, 13718=>1694, 13719=>1181, 13720=>1532, 13721=>1414, 13722=>1450, 13723=>1554, 13724=>609, 13725=>1560, 13726=>370, 13727=>966, 13728=>548, 13729=>1783}, 13687=>{13677=>572, 13678=>503, 13679=>610, 13680=>1028, 13681=>403, 13682=>488, 13683=>572, 13684=>493, 13685=>340, 13686=>687, 13688=>1050, 13689=>307, 13690=>258, 13691=>1813, 13692=>1883, 13693=>534, 13694=>591, 13695=>1877, 13696=>713, 13697=>726, 13698=>1833, 13699=>620, 13700=>1899, 13701=>620, 13702=>1466, 13703=>1347, 13704=>2202, 13705=>613, 13706=>635, 13707=>1730, 13708=>1310, 13709=>662, 13710=>1820, 13711=>1405, 13712=>1737, 13713=>1281, 13714=>1318, 13715=>1708, 13716=>604, 13717=>1827, 13718=>1827, 13719=>1314, 13720=>1665, 13721=>1547, 13722=>1583, 13723=>1687, 13724=>513, 13725=>1693, 13726=>535, 13727=>1147, 13728=>723, 13729=>1794}, 13688=>{13677=>633, 13678=>714, 13679=>834, 13684=>980, 13685=>1104, 13686=>868, 13687=>1048, 13689=>1158, 13690=>995, 13691=>2683, 13692=>1690, 13693=>922, 13700=>1706, 13701=>831, 13702=>1273, 13703=>1154, 13704=>3072, 13705=>794, 13706=>727, 13707=>1537, 13708=>1117, 13709=>780, 13710=>1627, 13711=>1212, 13712=>1544, 13713=>1088, 13714=>1125, 13715=>1515, 13716=>775, 13717=>1634, 13718=>1634, 13719=>1121, 13720=>1472, 13721=>1354, 13722=>1390, 13723=>1494, 13724=>648, 13725=>1500, 13726=>716, 13727=>174, 13728=>363, 13729=>1723, 13680=>98, 13681=>836, 13682=>1011, 13683=>633, 13694=>1639, 13695=>1684, 13696=>960, 13697=>947, 13698=>1711, 13699=>831}, 13689=>{13677=>595, 13678=>444, 13679=>326, 13680=>1093, 13681=>705, 13682=>204, 13683=>595, 13684=>239, 13685=>56, 13686=>989, 13687=>302, 13688=>1154, 13690=>560, 13691=>1779, 13692=>1879, 13693=>250, 13694=>557, 13695=>1873, 13696=>931, 13697=>944, 13698=>1799, 13699=>368, 13700=>1895, 13701=>368, 13702=>1462, 13703=>1343, 13704=>2168, 13705=>915, 13706=>430, 13707=>1726, 13708=>1306, 13709=>380, 13710=>1816, 13711=>1401, 13712=>1733, 13713=>1277, 13714=>1314, 13715=>1704, 13716=>393, 13717=>1823, 13718=>1823, 13719=>1310, 13720=>1661, 13721=>1543, 13722=>1579, 13723=>1683, 13724=>509, 13725=>1689, 13726=>725, 13727=>1328, 13728=>1025, 13729=>1760}, 13690=>{13677=>554, 13678=>485, 13679=>698, 13680=>969, 13681=>157, 13682=>742, 13683=>554, 13684=>747, 13685=>594, 13686=>453, 13687=>254, 13688=>991, 13689=>561, 13691=>1862, 13692=>1866, 13693=>742, 13694=>640, 13695=>1860, 13696=>467, 13697=>480, 13698=>1887, 13699=>602, 13700=>1882, 13701=>602, 13702=>1449, 13703=>1330, 13704=>2251, 13705=>379, 13706=>617, 13707=>1713, 13708=>1293, 13709=>644, 13710=>1803, 13711=>1388, 13712=>1720, 13713=>1264, 13714=>1301, 13715=>1691, 13716=>586, 13717=>1810, 13718=>1810, 13719=>1297, 13720=>1648, 13721=>1530, 13722=>1566, 13723=>1670, 13724=>495, 13725=>1676, 13726=>486, 13727=>1092, 13728=>664, 13729=>1843}, 13691=>{13677=>2184, 13678=>2030, 13679=>1805, 13680=>2585, 13681=>1983, 13682=>1887, 13683=>2184, 13684=>1822, 13685=>1776, 13686=>2147, 13687=>1772, 13688=>2646, 13689=>1743, 13690=>1826, 13692=>2085, 13693=>1783, 13694=>1302, 13695=>1536, 13696=>2054, 13697=>2067, 13698=>1416, 13699=>1965, 13700=>1513, 13701=>1965, 13702=>2190, 13703=>1895, 13704=>581, 13705=>2141, 13706=>1912, 13707=>1599, 13708=>1919, 13709=>1859, 13710=>1568, 13711=>2129, 13712=>1726, 13713=>1948, 13714=>1910, 13715=>2389, 13716=>1928, 13717=>1595, 13718=>2427, 13719=>1914, 13720=>1646, 13721=>2196, 13722=>1662, 13723=>1633, 13724=>2046, 13725=>1627, 13726=>2312, 13727=>2820, 13728=>2495, 13729=>1374}, 13692=>{13677=>1342, 13678=>1413, 13679=>1531, 13680=>1603, 13681=>1685, 13682=>1710, 13683=>1342, 13684=>1666, 13685=>1803, 13686=>1717, 13687=>1856, 13688=>1664, 13689=>1857, 13690=>1844, 13691=>2109, 13693=>1619, 13694=>2230, 13695=>895, 13696=>1809, 13697=>1796, 13698=>993, 13699=>1530, 13700=>917, 13701=>1530, 13702=>791, 13703=>620, 13704=>2622, 13705=>1643, 13706=>1424, 13707=>687, 13708=>654, 13709=>1477, 13710=>831, 13711=>727, 13712=>406, 13713=>683, 13714=>645, 13715=>820, 13716=>1472, 13717=>838, 13721=>629, 13722=>512, 13723=>485, 13724=>1347, 13725=>491, 13726=>1425, 13727=>1838, 13728=>1743, 13729=>1051, 13718=>851, 13719=>649, 13720=>536}, 13693=>{13677=>409, 13685=>197, 13686=>873, 13687=>530, 13688=>917, 13689=>251, 13690=>743, 13691=>1815, 13692=>1642, 13694=>785, 13695=>1636, 13696=>965, 13697=>952, 13698=>1663, 13699=>182, 13700=>1658, 13701=>182, 13702=>1225, 13703=>1106, 13704=>2204, 13705=>799, 13706=>183, 13707=>1489, 13708=>1069, 13709=>130, 13710=>1579, 13711=>1164, 13712=>1496, 13713=>1040, 13714=>1077, 13715=>1467, 13716=>199, 13717=>1586, 13718=>1586, 13719=>1073, 13720=>1424, 13721=>1306, 13722=>1342, 13723=>1446, 13724=>317, 13725=>1452, 13726=>539, 13727=>1091, 13728=>899, 13729=>1675, 13678=>258, 13679=>76, 13680=>856, 13681=>841, 13682=>104, 13683=>409, 13684=>112}, 13694=>{13677=>1138, 13678=>962, 13679=>844, 13680=>1598, 13681=>781, 13682=>722, 13683=>1138, 13684=>727, 13685=>574, 13686=>895, 13687=>570, 13688=>1620, 13689=>541, 13690=>624, 13691=>1321, 13692=>2221, 13693=>768, 13695=>1464, 13696=>802, 13697=>815, 13698=>1341, 13699=>886, 13700=>1441, 13701=>886, 13702=>1978, 13703=>1890, 13704=>1710, 13705=>889, 13706=>948, 13707=>1594, 13708=>1822, 13709=>898, 13710=>1489, 13711=>1917, 13712=>1794, 13713=>1793, 13714=>1830, 13715=>2220, 13716=>911, 13717=>1523, 13718=>2339, 13719=>1826, 13720=>1641, 13721=>2059, 13722=>1657, 13723=>1696, 13724=>1027, 13725=>1690, 13726=>1110, 13727=>1716, 13728=>1293, 13729=>1302}, 13695=>{13677=>1359, 13678=>1430, 13679=>1548, 13680=>1620, 13681=>1702, 13682=>1727, 13683=>1359, 13684=>1683, 13685=>1820, 13686=>1734, 13687=>1873, 13688=>1681, 13689=>1874, 13690=>1861, 13691=>1583, 13692=>932, 13693=>1636, 13694=>1512, 13696=>1826, 13697=>1813, 13698=>132, 13699=>1547, 13700=>22, 13701=>1547, 13702=>815, 13703=>520, 13704=>2018, 13705=>1660, 13706=>1441, 13707=>316, 13708=>544, 13709=>1494, 13710=>57, 13711=>754, 13712=>503, 13713=>573, 13714=>535, 13715=>1052, 13716=>1489, 13717=>58, 13718=>1135, 13719=>539, 13720=>354, 13721=>904, 13722=>337, 13723=>396, 13724=>1364, 13725=>390, 13726=>1442, 13727=>1855, 13728=>1760, 13729=>156}, 13696=>{13677=>613, 13678=>715, 13679=>931, 13680=>946, 13681=>398, 13682=>1012, 13683=>613, 13684=>1077, 13685=>977, 13686=>93, 13687=>721, 13688=>968, 13689=>944, 13690=>479, 13691=>2104, 13692=>1843, 13693=>972, 13694=>831, 13695=>1837, 13697=>13, 13698=>1864, 13699=>832, 13700=>1859, 13701=>832, 13702=>1426, 13703=>1307, 13704=>2493, 13705=>167, 13706=>824, 13707=>1690, 13708=>1270, 13709=>877, 13710=>1780, 13711=>1365, 13712=>1697, 13713=>1241, 13714=>1278, 13715=>1668, 13716=>816, 13717=>1787, 13718=>1787, 13719=>1274, 13720=>1625, 13721=>1507, 13722=>1543, 13723=>1647, 13724=>702, 13725=>1653, 13726=>463, 13727=>1021, 13728=>641, 13729=>1876}, 13697=>{13677=>600, 13678=>702, 13679=>918, 13680=>933, 13681=>385, 13682=>999, 13683=>600, 13684=>1064, 13685=>990, 13686=>81, 13687=>734, 13688=>955, 13689=>957, 13690=>492, 13691=>2117, 13692=>1830, 13693=>959, 13694=>844, 13695=>1824, 13696=>13, 13698=>1851, 13699=>819, 13700=>1846, 13701=>819, 13702=>1413, 13703=>1294, 13704=>2506, 13705=>154, 13706=>811, 13707=>1677, 13708=>1257, 13709=>864, 13710=>1767, 13711=>1352, 13712=>1684, 13713=>1228, 13714=>1265, 13715=>1655, 13716=>803, 13717=>1774, 13718=>1774, 13719=>1261, 13720=>1612, 13721=>1494, 13722=>1530, 13726=>450, 13727=>998, 13728=>628, 13729=>1863, 13723=>1634, 13724=>689, 13725=>1640}, 13698=>{13677=>1407, 13678=>1478, 13679=>1596, 13680=>1668, 13681=>1750, 13682=>1775, 13690=>1909, 13691=>1464, 13692=>1035, 13693=>1684, 13694=>1393, 13695=>136, 13696=>1874, 13697=>1861, 13699=>1595, 13700=>113, 13701=>1595, 13702=>924, 13703=>629, 13704=>1899, 13705=>1708, 13706=>1489, 13707=>438, 13708=>653, 13709=>1542, 13710=>193, 13711=>863, 13712=>606, 13713=>682, 13714=>644, 13715=>1161, 13716=>1537, 13717=>195, 13718=>1238, 13719=>648, 13720=>457, 13721=>1000, 13722=>440, 13723=>499, 13724=>1412, 13725=>493, 13726=>1490, 13727=>1903, 13728=>1808, 13729=>60, 13683=>1407, 13684=>1731, 13685=>1868, 13686=>1782, 13687=>1863, 13688=>1729, 13689=>1834}, 13699=>{13677=>269, 13678=>118, 13679=>179, 13680=>767, 13681=>701, 13682=>222, 13683=>269, 13684=>294, 13685=>315, 13686=>733, 13687=>617, 13688=>828, 13689=>369, 13690=>603, 13691=>1997, 13692=>1553, 13693=>182, 13694=>903, 13695=>1547, 13696=>825, 13697=>812, 13698=>1574, 13700=>1569, 13702=>1136, 13703=>1017, 13704=>2386, 13705=>659, 13706=>104, 13707=>1400, 13708=>980, 13709=>125, 13710=>1490, 13711=>1075, 13712=>1407, 13713=>951, 13714=>988, 13715=>1378, 13716=>67, 13717=>1497, 13718=>1497, 13719=>984, 13720=>1335, 13721=>1217, 13722=>1253, 13723=>1357, 13724=>183, 13725=>1363, 13726=>399, 13727=>1002, 13728=>759, 13729=>1586}, 13700=>{13677=>1382, 13678=>1453, 13679=>1571, 13680=>1643, 13681=>1725, 13682=>1750, 13683=>1382, 13684=>1706, 13685=>1843, 13686=>1757, 13687=>1896, 13688=>1704, 13689=>1897, 13690=>1884, 13691=>1561, 13692=>955, 13693=>1659, 13694=>1490, 13695=>23, 13696=>1849, 13697=>1836, 13698=>110, 13699=>1570, 13701=>1570, 13702=>838, 13703=>543, 13704=>1996, 13705=>1683, 13706=>1464, 13707=>339, 13708=>567, 13709=>1517, 13710=>80, 13711=>777, 13712=>526, 13713=>596, 13714=>558, 13715=>1075, 13716=>1512, 13717=>81, 13718=>1158, 13719=>562, 13720=>377, 13721=>927, 13722=>360, 13723=>419, 13724=>1387, 13725=>413, 13726=>1465, 13727=>1878, 13728=>1783, 13729=>134}, 13701=>{13677=>269, 13678=>118, 13679=>179, 13680=>767, 13681=>701, 13682=>222, 13683=>269, 13684=>294, 13685=>315, 13686=>733, 13687=>617, 13688=>828, 13689=>369, 13690=>603, 13691=>1997, 13692=>1553, 13693=>182, 13694=>903, 13695=>1547, 13696=>825, 13697=>812, 13698=>1574, 13700=>1569, 13702=>1136, 13703=>1017, 13704=>2386, 13705=>659, 13706=>104, 13707=>1400, 13708=>980, 13709=>125, 13710=>1490, 13713=>951, 13714=>988, 13715=>1378, 13716=>67, 13717=>1497, 13718=>1497, 13719=>984, 13720=>1335, 13721=>1217, 13722=>1253, 13711=>1075, 13712=>1407, 13723=>1357, 13724=>183, 13725=>1363, 13726=>399, 13727=>1002, 13728=>759, 13729=>1586}, 13702=>{13678=>1028, 13679=>1146, 13680=>1218, 13681=>1300, 13682=>1325, 13683=>957, 13684=>1281, 13685=>1418, 13686=>1332, 13687=>1471, 13688=>1279, 13689=>1472, 13690=>1459, 13691=>2223, 13692=>814, 13693=>1234, 13694=>2006, 13695=>824, 13696=>1424, 13697=>1411, 13698=>929, 13699=>1145, 13700=>846, 13701=>1145, 13703=>294, 13704=>2736, 13705=>1258, 13706=>1039, 13707=>677, 13708=>344, 13709=>1092, 13710=>767, 13711=>62, 13712=>684, 13713=>315, 13714=>352, 13715=>237, 13716=>1087, 13717=>774, 13718=>349, 13719=>348, 13720=>612, 13721=>166, 13722=>531, 13723=>634, 13724=>962, 13725=>640, 13726=>1040, 13727=>1453, 13728=>1358, 13729=>980, 13677=>957}, 13703=>{13677=>839, 13678=>910, 13679=>1028, 13680=>1100, 13681=>1182, 13682=>1207, 13683=>839, 13684=>1163, 13685=>1300, 13686=>1214, 13687=>1353, 13688=>1161, 13689=>1354, 13690=>1341, 13691=>1929, 13692=>589, 13693=>1116, 13694=>1950, 13695=>530, 13696=>1306, 13697=>1293, 13698=>635, 13699=>1027, 13700=>552, 13701=>1027, 13702=>295, 13704=>2442, 13705=>1140, 13706=>921, 13707=>383, 13708=>140, 13709=>974, 13710=>473, 13711=>234, 13712=>390, 13713=>169, 13714=>131, 13715=>532, 13716=>969, 13717=>480, 13718=>644, 13719=>135, 13720=>318, 13721=>371, 13722=>236, 13723=>340, 13724=>844, 13725=>346, 13726=>922, 13727=>1335, 13728=>1240, 13729=>686}, 13704=>{13677=>2547, 13678=>2393, 13679=>2168, 13680=>2948, 13681=>2346, 13682=>2250, 13683=>2547, 13684=>2185, 13685=>2139, 13686=>2510, 13687=>2135, 13688=>3009, 13689=>2106, 13690=>2189, 13691=>577, 13692=>2529, 13693=>2146, 13694=>1665, 13695=>1962, 13696=>2417, 13697=>2430, 13698=>1842, 13699=>2328, 13700=>1939, 13701=>2328, 13702=>2670, 13703=>2375, 13705=>2504, 13706=>2275, 13707=>2079, 13708=>2399, 13709=>2222, 13710=>1994, 13711=>2609, 13712=>2235, 13713=>2428, 13714=>2390, 13715=>2869, 13716=>2291, 13717=>2021, 13718=>2907, 13719=>2394, 13720=>2126, 13721=>2676, 13722=>2142, 13723=>2133, 13724=>2409, 13725=>2127, 13726=>2675, 13727=>3183, 13728=>2858, 13729=>1800}, 13705=>{13677=>446, 13678=>548, 13679=>764, 13680=>779, 13681=>231, 13682=>845, 13683=>446, 13684=>910, 13685=>938, 13686=>74, 13687=>618, 13688=>801, 13689=>925, 13690=>390, 13691=>2189, 13692=>1676, 13693=>805, 13694=>916, 13695=>1670, 13696=>166, 13697=>153, 13698=>1697, 13699=>665, 13700=>1692, 13701=>665, 13702=>1259, 13703=>1140, 13704=>2578, 13706=>657, 13707=>1523, 13708=>1103, 13709=>710, 13710=>1613, 13711=>1198, 13712=>1530, 13713=>1074, 13714=>1111, 13715=>1501, 13716=>649, 13717=>1620, 13718=>1620, 13719=>1107, 13720=>1458, 13721=>1340, 13722=>1376, 13723=>1480, 13724=>535, 13725=>1486, 13726=>296, 13727=>892, 13728=>474, 13729=>1709}, 13706=>{13677=>270, 13678=>148, 13679=>105, 13680=>671, 13681=>702, 13682=>293, 13683=>270, 13684=>251, 13685=>386, 13686=>734, 13687=>641, 13688=>732, 13689=>440, 13690=>627, 13691=>1954, 13692=>1457, 13693=>193, 13694=>974, 13695=>1451, 13696=>826, 13697=>813, 13698=>1478, 13699=>113, 13700=>1473, 13701=>113, 13702=>1040, 13703=>921, 13704=>2343, 13705=>660, 13707=>1304, 13708=>884, 13709=>51, 13710=>1394, 13711=>979, 13712=>1311, 13713=>855, 13714=>892, 13715=>1282, 13716=>46, 13717=>1401, 13718=>1401, 13719=>888, 13720=>1239, 13721=>1121, 13722=>1157, 13723=>1261, 13724=>132, 13725=>1267, 13726=>400, 13727=>906, 13728=>760, 13729=>1490}, 13707=>{13677=>1212, 13678=>1283, 13679=>1401, 13680=>1473, 13681=>1555, 13682=>1580, 13683=>1212, 13684=>1536, 13685=>1673, 13686=>1587, 13687=>1726, 13688=>1534, 13689=>1727, 13690=>1714, 13691=>1622, 13692=>726, 13693=>1489, 13694=>1643, 13695=>315, 13696=>1679, 13697=>1666, 13698=>434, 13699=>1400, 13700=>337, 13701=>1400, 13702=>668, 13703=>373, 13704=>2135, 13705=>1513, 13706=>1294, 13708=>397, 13709=>1347, 13710=>258, 13711=>607, 13712=>297, 13713=>426, 13714=>388, 13715=>882, 13716=>1342, 13717=>293, 13718=>920, 13719=>392, 13720=>139, 13721=>689, 13722=>140, 13723=>190, 13724=>1217, 13725=>184, 13726=>1295, 13727=>1708, 13728=>1613, 13729=>471}, 13708=>{13677=>800, 13678=>871, 13679=>989, 13680=>1061, 13681=>1143, 13682=>1168, 13683=>800, 13684=>1124, 13685=>1261, 13686=>1175, 13687=>1314, 13688=>1122, 13689=>1315, 13690=>1302, 13691=>1954, 13692=>624, 13693=>1077, 13694=>1849, 13695=>555, 13696=>1267, 13697=>1254, 13698=>660, 13699=>988, 13700=>577, 13701=>988, 13702=>343, 13703=>141, 13704=>2467, 13705=>1101, 13706=>882, 13707=>408, 13709=>935, 13710=>498, 13711=>282, 13712=>421, 13713=>29, 13714=>8, 13715=>592, 13716=>930, 13717=>505, 13718=>704, 13719=>5, 13720=>353, 13721=>429, 13722=>261, 13723=>375, 13724=>805, 13725=>381, 13726=>883, 13727=>1296, 13728=>1201, 13729=>711}, 13709=>{13677=>325, 13678=>171, 13679=>54, 13680=>726, 13681=>757, 13682=>246, 13683=>325, 13684=>200, 13685=>339, 13686=>789, 13687=>670, 13688=>787, 13689=>393, 13690=>656, 13691=>1903, 13692=>1512, 13693=>142, 13694=>927, 13695=>1506, 13696=>881, 13697=>868, 13698=>1533, 13699=>136, 13700=>1528, 13701=>136, 13702=>1095, 13703=>976, 13704=>2292, 13705=>715, 13706=>53, 13707=>1359, 13708=>939, 13710=>1449, 13711=>1034, 13712=>1366, 13713=>910, 13714=>947, 13715=>1337, 13716=>69, 13717=>1456, 13718=>1456, 13719=>943, 13720=>1294, 13721=>1176, 13722=>1212, 13723=>1316, 13724=>187, 13725=>1322, 13726=>455, 13727=>961, 13728=>815, 13729=>1545}, 13710=>{13677=>1302, 13678=>1373, 13679=>1491, 13680=>1563, 13681=>1645, 13682=>1670, 13683=>1302, 13684=>1626, 13685=>1763, 13686=>1677, 13693=>1579, 13694=>1539, 13695=>57, 13696=>1769, 13697=>1756, 13698=>189, 13699=>1490, 13700=>79, 13701=>1490, 13702=>758, 13703=>463, 13704=>2052, 13705=>1603, 13706=>1384, 13707=>259, 13708=>487, 13709=>1437, 13711=>697, 13712=>440, 13713=>516, 13714=>478, 13715=>995, 13716=>1432, 13717=>50, 13718=>1087, 13719=>482, 13720=>306, 13721=>856, 13722=>274, 13723=>333, 13724=>1307, 13725=>327, 13726=>1385, 13727=>1798, 13728=>1703, 13729=>213, 13687=>1816, 13688=>1624, 13689=>1817, 13690=>1804, 13691=>1617, 13692=>869}, 13711=>{13677=>895, 13678=>966, 13679=>1084, 13680=>1156, 13681=>1238, 13682=>1263, 13683=>895, 13684=>1219, 13685=>1356, 13686=>1270, 13687=>1409, 13688=>1217, 13689=>1410, 13690=>1397, 13691=>2161, 13692=>758, 13693=>1172, 13694=>1944, 13695=>762, 13696=>1362, 13697=>1349, 13698=>867, 13699=>1083, 13700=>784, 13701=>1083, 13702=>61, 13703=>232, 13704=>2674, 13705=>1196, 13706=>977, 13707=>615, 13708=>282, 13709=>1030, 13710=>705, 13712=>622, 13713=>253, 13714=>290, 13715=>298, 13716=>1025, 13717=>712, 13718=>410, 13719=>286, 13720=>550, 13721=>137, 13722=>468, 13723=>572, 13724=>900, 13725=>578, 13726=>978, 13727=>1391, 13728=>1296, 13729=>918}, 13712=>{13677=>1202, 13678=>1273, 13679=>1391, 13680=>1463, 13681=>1545, 13682=>1570, 13683=>1202, 13684=>1526, 13685=>1663, 13686=>1577, 13687=>1716, 13688=>1524, 13689=>1717, 13690=>1704, 13691=>1749, 13692=>429, 13693=>1479, 13694=>1828, 13695=>489, 13696=>1669, 13697=>1656, 13698=>587, 13699=>1390, 13700=>511, 13701=>1390, 13702=>658, 13703=>363, 13704=>2280, 13705=>1503, 13706=>1284, 13707=>281, 13708=>402, 13709=>1337, 13710=>425, 13711=>597, 13713=>431, 13714=>393, 13715=>804, 13716=>1332, 13717=>432, 13718=>828, 13719=>397, 13720=>226, 13721=>611, 13722=>197, 13723=>170, 13724=>1207, 13725=>176, 13726=>1285, 13727=>1698, 13728=>1603, 13729=>645}, 13713=>{13677=>771, 13678=>842, 13679=>960, 13680=>1032, 13681=>1114, 13682=>1139, 13683=>771, 13684=>1095, 13685=>1232, 13686=>1146, 13687=>1285, 13688=>1093, 13689=>1286, 13690=>1273, 13691=>1983, 13692=>653, 13693=>1048, 13694=>1820, 13695=>584, 13696=>1238, 13697=>1225, 13698=>689, 13699=>959, 13700=>606, 13701=>959, 13702=>314, 13703=>170, 13704=>2496, 13705=>1072, 13706=>853, 13707=>437, 13708=>28, 13709=>906, 13710=>527, 13711=>253, 13712=>450, 13714=>36, 13715=>563, 13716=>901, 13717=>534, 13725=>410, 13726=>854, 13727=>1267, 13728=>1172, 13729=>740, 13722=>290, 13723=>404, 13724=>776, 13718=>675, 13719=>33, 13720=>382, 13721=>400}, 13714=>{13677=>809, 13678=>880, 13679=>998, 13680=>1070, 13681=>1152, 13685=>1270, 13686=>1184, 13687=>1323, 13688=>1131, 13689=>1324, 13690=>1311, 13691=>1946, 13692=>616, 13693=>1086, 13694=>1858, 13695=>547, 13696=>1276, 13697=>1263, 13698=>652, 13699=>997, 13700=>569, 13701=>997, 13702=>352, 13703=>133, 13704=>2459, 13705=>1110, 13706=>891, 13707=>400, 13708=>8, 13709=>944, 13710=>490, 13711=>291, 13712=>413, 13713=>37, 13715=>601, 13716=>939, 13717=>497, 13718=>713, 13719=>3, 13720=>345, 13721=>438, 13722=>253, 13723=>367, 13724=>814, 13725=>373, 13726=>892, 13727=>1305, 13728=>1210, 13729=>703, 13682=>1177, 13683=>809, 13684=>1133}, 13715=>{13677=>1193, 13678=>1264, 13679=>1382, 13680=>1454, 13681=>1536, 13682=>1561, 13683=>1193, 13684=>1517, 13685=>1654, 13686=>1568, 13687=>1707, 13688=>1515, 13689=>1708, 13690=>1695, 13691=>2410, 13692=>840, 13693=>1470, 13694=>2242, 13695=>1058, 13696=>1660, 13697=>1647, 13698=>1163, 13699=>1381, 13700=>1080, 13701=>1381, 13702=>234, 13703=>528, 13704=>2923, 13705=>1494, 13706=>1275, 13707=>879, 13708=>589, 13709=>1328, 13710=>1001, 13711=>296, 13712=>813, 13713=>560, 13714=>597, 13716=>1323, 13717=>1008, 13718=>113, 13719=>593, 13720=>737, 13721=>193, 13722=>713, 13723=>767, 13724=>1198, 13725=>773, 13726=>1276, 13727=>1689, 13728=>1594, 13729=>1214}, 13716=>{13677=>253, 13678=>102, 13679=>112, 13680=>710, 13681=>685, 13682=>247, 13683=>253, 13684=>258, 13685=>340, 13686=>717, 13687=>601, 13688=>771, 13689=>394, 13690=>587, 13691=>1961, 13692=>1496, 13693=>200, 13694=>928, 13695=>1490, 13696=>809, 13697=>796, 13698=>1517, 13699=>67, 13700=>1512, 13701=>67, 13702=>1079, 13703=>960, 13704=>2350, 13705=>643, 13706=>37, 13707=>1343, 13708=>923, 13709=>58, 13710=>1433, 13711=>1018, 13712=>1350, 13713=>894, 13714=>931, 13715=>1321, 13717=>1440, 13718=>1440, 13719=>927, 13720=>1278, 13721=>1160, 13722=>1196, 13723=>1300, 13724=>167, 13725=>1306, 13726=>383, 13727=>945, 13728=>743, 13729=>1529}, 13717=>{13677=>1306, 13678=>1377, 13679=>1495, 13680=>1567, 13681=>1649, 13682=>1674, 13683=>1306, 13684=>1630, 13685=>1767, 13686=>1681, 13687=>1820, 13688=>1628, 13689=>1821, 13690=>1808, 13691=>1640, 13692=>873, 13693=>1583, 13694=>1569, 13695=>57, 13696=>1773, 13697=>1760, 13698=>189, 13699=>1494, 13700=>79, 13701=>1494, 13702=>762, 13703=>467, 13704=>2075, 13705=>1607, 13706=>1388, 13707=>290, 13708=>491, 13715=>999, 13716=>1436, 13718=>1076, 13719=>486, 13720=>295, 13721=>845, 13722=>278, 13723=>337, 13724=>1311, 13725=>331, 13709=>1441, 13710=>48, 13711=>701, 13712=>444, 13713=>520, 13714=>482, 13726=>1389, 13727=>1802, 13728=>1707, 13729=>213}, 13718=>{13677=>1318, 13678=>1389, 13679=>1507, 13680=>1579, 13681=>1661, 13682=>1686, 13683=>1318, 13684=>1642, 13685=>1779, 13686=>1693, 13687=>1832, 13688=>1640, 13689=>1833, 13690=>1820, 13691=>2454, 13692=>879, 13693=>1595, 13694=>2367, 13695=>1139, 13696=>1785, 13697=>1772, 13698=>1237, 13699=>1506, 13700=>1161, 13701=>1506, 13702=>351, 13703=>645, 13704=>2967, 13705=>1619, 13706=>1400, 13707=>923, 13708=>705, 13709=>1453, 13710=>1090, 13711=>413, 13712=>849, 13713=>676, 13714=>713, 13715=>119, 13716=>1448, 13717=>1082, 13719=>709, 13720=>780, 13721=>281, 13722=>757, 13723=>793, 13724=>1323, 13725=>799, 13726=>1401, 13727=>1814, 13728=>1719, 13729=>1295}, 13719=>{13677=>805, 13678=>876, 13679=>994, 13680=>1066, 13681=>1148, 13682=>1173, 13683=>805, 13684=>1129, 13685=>1266, 13686=>1180, 13687=>1319, 13688=>1127, 13689=>1320, 13690=>1307, 13691=>1950, 13692=>620, 13693=>1082, 13694=>1854, 13695=>551, 13696=>1272, 13697=>1259, 13698=>656, 13699=>993, 13700=>573, 13701=>993, 13702=>348, 13703=>137, 13704=>2463, 13705=>1106, 13706=>887, 13707=>404, 13708=>5, 13709=>940, 13710=>494, 13711=>287, 13712=>417, 13713=>34, 13714=>3, 13715=>597, 13716=>935, 13717=>501, 13718=>709, 13720=>349, 13721=>434, 13722=>257, 13723=>371, 13724=>810, 13725=>377, 13726=>888, 13727=>1301, 13728=>1206, 13729=>707}, 13720=>{13677=>1159, 13678=>1230, 13679=>1348, 13680=>1420, 13681=>1502, 13682=>1527, 13683=>1159, 13684=>1483, 13685=>1620, 13686=>1534, 13687=>1673, 13688=>1481, 13689=>1674, 13690=>1661, 13691=>1673, 13692=>580, 13693=>1436, 13694=>1694, 13695=>358, 13696=>1626, 13697=>1613, 13698=>456, 13699=>1347, 13700=>380, 13701=>1347, 13702=>615, 13703=>320, 13704=>2186, 13705=>1460, 13706=>1241, 13707=>142, 13708=>354, 13709=>1294, 13710=>309, 13711=>554, 13712=>245, 13713=>383, 13714=>345, 13715=>743, 13716=>1289, 13717=>301, 13718=>781, 13719=>349, 13721=>550, 13722=>24, 13723=>138, 13724=>1164, 13725=>132, 13726=>1242, 13727=>1655, 13728=>1560, 13729=>514}, 13721=>{13677=>1032, 13678=>1103, 13679=>1221, 13680=>1293, 13681=>1375, 13682=>1400, 13683=>1032, 13684=>1356, 13685=>1493, 13686=>1407, 13687=>1546, 13688=>1354, 13689=>1547, 13690=>1534, 13691=>2217, 13692=>648, 13693=>1309, 13694=>2081, 13695=>902, 13696=>1499, 13697=>1486, 13698=>1001, 13699=>1220, 13700=>924, 13701=>1220, 13702=>162, 13703=>366, 13704=>2730, 13705=>1333, 13706=>1114, 13707=>686, 13708=>425, 13709=>1167, 13710=>853, 13711=>134, 13712=>619, 13713=>396, 13714=>433, 13715=>193, 13716=>1162, 13717=>845, 13718=>275, 13719=>429, 13720=>544, 13722=>520, 13723=>573, 13724=>1037, 13725=>579, 13726=>1115, 13727=>1528, 13728=>1433, 13729=>1058}, 13722=>{13677=>1072, 13678=>1143, 13679=>1261, 13680=>1333, 13681=>1415, 13682=>1440, 13684=>1396, 13685=>1533, 13686=>1447, 13687=>1586, 13688=>1394, 13689=>1587, 13690=>1574, 13691=>1693, 13692=>556, 13693=>1349, 13702=>528, 13703=>233, 13704=>2206, 13705=>1373, 13706=>1154, 13707=>147, 13708=>257, 13709=>1207, 13710=>281, 13711=>467, 13713=>286, 13714=>248, 13715=>719, 13716=>1202, 13717=>288, 13718=>757, 13719=>252, 13720=>24, 13721=>526, 13723=>162, 13724=>1077, 13725=>156, 13726=>1155, 13727=>1568, 13728=>1473, 13729=>501, 13683=>1072, 13694=>1714, 13695=>345, 13696=>1539, 13697=>1526, 13698=>443, 13699=>1260, 13700=>367, 13701=>1260, 13712=>218}, 13723=>{13677=>1167, 13678=>1238, 13679=>1356, 13680=>1428, 13681=>1510, 13682=>1535, 13683=>1167, 13684=>1491, 13685=>1628, 13686=>1542, 13687=>1681, 13688=>1489, 13689=>1682, 13690=>1669, 13691=>1673, 13692=>529, 13693=>1444, 13694=>1753, 13695=>401, 13696=>1634, 13697=>1621, 13698=>499, 13699=>1355, 13700=>423, 13701=>1355, 13702=>623, 13703=>328, 13704=>2197, 13705=>1468, 13706=>1249, 13707=>193, 13708=>377, 13709=>1302, 13710=>337, 13711=>562, 13712=>191, 13713=>406, 13714=>368, 13715=>779, 13716=>1297, 13717=>344, 13718=>793, 13719=>372, 13720=>138, 13721=>586, 13722=>162, 13724=>1172, 13725=>6, 13726=>1250, 13727=>1663, 13728=>1568, 13729=>557}, 13724=>{13677=>138, 13678=>66, 13679=>229, 13680=>584, 13681=>570, 13682=>363, 13683=>138, 13684=>375, 13685=>456, 13686=>602, 13687=>509, 13688=>645, 13689=>510, 13690=>495, 13691=>2078, 13692=>1370, 13693=>317, 13694=>1044, 13695=>1364, 13696=>694, 13697=>681, 13698=>1391, 13699=>183, 13700=>1386, 13701=>183, 13702=>953, 13703=>834, 13704=>2467, 13705=>528, 13706=>122, 13707=>1217, 13708=>797, 13709=>175, 13710=>1307, 13711=>892, 13712=>1224, 13713=>768, 13714=>805, 13715=>1195, 13716=>167, 13717=>1314, 13718=>1314, 13719=>801, 13720=>1152, 13721=>1034, 13722=>1070, 13723=>1174, 13725=>1180, 13726=>268, 13727=>819, 13728=>628, 13729=>1403}, 13725=>{13677=>1173, 13678=>1244, 13679=>1362, 13680=>1434, 13681=>1516, 13682=>1541, 13683=>1173, 13684=>1497, 13685=>1634, 13686=>1548, 13687=>1687, 13688=>1495, 13689=>1688, 13690=>1675, 13691=>1667, 13692=>535, 13693=>1450, 13694=>1747, 13695=>395, 13696=>1640, 13697=>1627, 13698=>493, 13699=>1361, 13700=>417, 13701=>1361, 13702=>629, 13703=>334, 13704=>2191, 13705=>1474, 13706=>1255, 13707=>187, 13708=>383, 13709=>1308, 13710=>331, 13711=>568, 13712=>197, 13713=>412, 13714=>374, 13715=>785, 13716=>1303, 13717=>338, 13718=>799, 13719=>378, 13720=>132, 13721=>592, 13722=>156, 13723=>6, 13724=>1178, 13726=>1256, 13727=>1669, 13728=>1574, 13729=>551}, 13726=>{13677=>175, 13678=>277, 13679=>493, 13680=>650, 13681=>327, 13682=>574, 13683=>175, 13684=>639, 13685=>667, 13686=>359, 13687=>529, 13688=>711, 13689=>721, 13690=>486, 13691=>2348, 13692=>1446, 13693=>534, 13694=>1126, 13695=>1440, 13696=>451, 13697=>438, 13698=>1467, 13699=>394, 13700=>1462, 13701=>394, 13702=>1029, 13703=>910, 13704=>2737, 13705=>285, 13706=>386, 13707=>1293, 13708=>873, 13709=>439, 13710=>1383, 13711=>968, 13712=>1300, 13713=>844, 13714=>881, 13715=>1271, 13716=>378, 13717=>1390, 13718=>1390, 13719=>877, 13720=>1228, 13721=>1110, 13722=>1146, 13723=>1250, 13724=>264, 13725=>1256, 13727=>809, 13728=>385, 13729=>1479}, 13727=>{13677=>810, 13678=>891, 13679=>1011, 13680=>275, 13681=>931, 13682=>1188, 13683=>810, 13684=>1157, 13685=>1281, 13686=>958, 13687=>1145, 13688=>177, 13689=>1335, 13690=>1090, 13691=>2860, 13692=>1867, 13693=>1099, 13694=>1730, 13695=>1861, 13696=>1007, 13697=>989, 13698=>1888, 13699=>1008, 13700=>1883, 13701=>1008, 13702=>1450, 13703=>1331, 13704=>3249, 13705=>884, 13706=>904, 13707=>1714, 13708=>1294, 13709=>957, 13710=>1804, 13711=>1389, 13712=>1721, 13713=>1265, 13714=>1302, 13715=>1692, 13716=>952, 13717=>1811, 13718=>1811, 13719=>1298, 13720=>1649, 13721=>1531, 13722=>1567, 13723=>1671, 13724=>825, 13725=>1677, 13726=>813, 13728=>411, 13729=>1900}, 13728=>{13677=>548, 13678=>650, 13679=>866, 13680=>352, 13681=>518, 13682=>947, 13683=>548, 13684=>1012, 13685=>1070, 13686=>550, 13687=>730, 13688=>374, 13689=>1037, 13690=>677, 13691=>2543, 13692=>1778, 13693=>907, 13694=>1321, 13695=>1772, 13696=>642, 13697=>629, 13698=>1799, 13699=>767, 13700=>1794, 13701=>767, 13702=>1361, 13703=>1242, 13704=>2932, 13705=>476, 13706=>759, 13707=>1625, 13708=>1205, 13709=>812, 13710=>1715, 13711=>1300, 13712=>1632, 13713=>1176, 13714=>1213, 13715=>1603, 13716=>751, 13717=>1722, 13718=>1722, 13719=>1209, 13720=>1560, 13721=>1442, 13722=>1478, 13723=>1582, 13724=>637, 13725=>1588, 13726=>398, 13727=>420, 13729=>1811}, 13729=>{13677=>1421, 13678=>1492, 13679=>1610, 13680=>1682, 13681=>1764, 13682=>1789, 13683=>1421, 13684=>1745, 13685=>1830, 13686=>1796, 13687=>1826, 13688=>1743, 13689=>1797, 13690=>1880, 13691=>1427, 13692=>1094, 13693=>1698, 13694=>1356, 13695=>162, 13696=>1888, 13697=>1875, 13698=>62, 13699=>1609, 13700=>139, 13701=>1609, 13702=>977, 13703=>682, 13704=>1862, 13705=>1722, 13706=>1503, 13707=>478, 13708=>706, 13709=>1556, 13710=>219, 13711=>916, 13712=>665, 13713=>735, 13714=>697, 13715=>1214, 13716=>1551, 13717=>220, 13718=>1297, 13719=>701, 13720=>516, 13721=>1066, 13722=>499, 13723=>558, 13724=>1426, 13725=>552, 13726=>1504, 13727=>1917, 13728=>1822}}

    routefound = false
    noroutefound = 0
    fromBuilding = Building.where(:mit => from).first
    toBuilding = Building.where(:mit => to).first
    sf = Stop.near(fromBuilding, 1, :order => :distance)
    st = Stop.near(toBuilding, 1, :order => :distance)
    if fromBuilding.address.include? "Cambridge" and toBuilding.address.include? "Cambridge"
      routeshash = {"saferidecamball" => 0, "saferidecambeast" => 0,  "saferidecambwest" => 0}
    else
      routeshash = {"boston" => 0, "saferidebostonall" => 0, "saferidebostone" => 0,  "saferidebostonw" => 0}
    end

    options = []
    ##for each route, find the closest stops to origin and destination
    count = 0
    sf.each do |stopfrom|
      stopfrom.routes.each do |stopfromroute|
        if routeshash[stopfromroute.nid] == 0
          routeshash[stopfromroute.nid] = [stopfrom]
          count+=1
        end
        if count==routeshash.length
          break
        end
      end
      if count==routeshash.length
          break
        end
    end
    st.each do |stopto|
      stopto.routes.each do |stoptoroute|
        if routeshash[stoptoroute.nid] != nil and routeshash[stoptoroute.nid] != 0 and routeshash[stoptoroute.nid].length==1
          routeshash[stoptoroute.nid] << [stopto]
        end
      end
    end

    #We have route => [from, [to]]
    routeshash.each do |routeNID, info|
      middleStops = []
      hitDestination = false
      fromIndex = 0
      toIndex = 0
      #get indices
      i = 0
      route = Route.where(:nid => routeNID).first
      route.stops.each do |stop|
        if stop==info[0]
          fromIndex = i
        elsif stop==info[1][0]
          toIndex = i
        end#stop==info
        i+=1
      end #route.stops.each
      #get middleStops
      i = 0
      route.stops.each do |stop|
        if goodPoint(fromIndex, toIndex, i)
          middleStops << stop
        end
        i+=1
      end #route.stops.each]
      puts routeshash
      routeshash[routeNID][1] += middleStops
    end

    routeshash.each do |routeNID, fromto|
      if fromto.length==2 and fromto[0] and fromto[1].length>0
        ostop = fromto[0]
        dstops = fromto[1]
        dstops.each do |dstop|
          timeToStop = stb[ostop.id][fromBuilding.id]
          if timeToStop.nil?
            timeToStop = WalkingTime(fromBuilding, ostop)
          end

          #get wait time until shuttle gets to origin stop
          begin
          getRequest = 'http://proximobus.appspot.com/agencies/mit/stops/'+ostop.nid+'/predictions/by-route/'+routeNID+".json"
          waitResponse = RestClient.get getRequest
          rescue
            retry
          end
          waitResponseJSON = JSON.parse(waitResponse)
          wait = 0
          vid = ""
          if waitResponseJSON["items"].length > 0
            routefound = true
            waitResponseJSON["items"].each do |item|
              wait = item["seconds"]
              vid = item["vehicle_id"]
              if wait>timeToStop
                break
              end
            end
            arrival = ArrivalTimeVehicle(vid, dstop.nid, routeNID, wait)
            lastWalk = stb[dstop.id][toBuilding.id]
            route = Route.where(:nid => routeNID).first
            goodRoute = [route.name, wait, arrival, ostop.name, dstop.name, "", timeToStop, lastWalk]
            options << goodRoute
          end
        end#dstops.each
      end
    end
    #walking time
    walkOption = ["walk", 0, 0, "", "", "", "", btb[fromBuilding.id][toBuilding.id]]
    #now put it all together
    #find best
    best = options[0]
    options.each do |option|
      if option[2] + option[7] < best[2] + best[7]
        best = option
      end
    end
    if walkOption[2]+walkOption[7]<best[2]+best[7]
      arrivaltime = Time.zone.now+walkOption[7]
      arrivaltime = arrivaltime.strftime("%I:%M")
      response = "Your best option is walking, which will get you there at "+arrivaltime+". "
      text(number, response)
    end
    if routefound == false
        response = "The Saferide is not running at this time. "
        text(number, response)
    else
      response = ""
      departure = Time.zone.now+best[1]
      arrive = Time.zone.now+best[2]+best[7]
      response += "The " + best[0] + " leaves from " + best[3] + " at " + departure.strftime("%I:%M") + " and will get you to your destination at " + arrive.strftime("%I:%M") + "." +
        " You should get off at the " + best[4] + " stop. "
      response = response.gsub('"', '')
      text(number, response)
    end

  end
  #Calculates the fastest route based on the origin and destination
  def logic(number, from, to, textbool=false)
    routefound = false
    noroutefound = 0
    fromBuilding = Building.where(:mit => from).first
    toBuilding = Building.where(:mit => to).first

    sf = Stop.near(fromBuilding, 1, :order => :distance)
    st = Stop.near(toBuilding, 1, :order => :distance)
    routeshash = {"boston" => nil, "saferidebostonall" => nil, "saferidebostone" => nil,  "saferidebostonw" => nil, "saferidecamball" => nil, "saferidecambeast" => nil,  "saferidecambwest" => nil}
    finalRoutesHash = {"boston" => nil, "saferidebostonall" => nil, "saferidebostone" => nil,  "saferidebostonw" => nil, "saferidecamball" => nil, "saferidecambeast" => nil,  "saferidecambwest" => nil}
    bestOption = [9999, 9999, "Somewhere", "Somewhere else", "", 9999, 9999]
    ##for each route, find the closest stops to origin and destination
    sf.each do |stopfrom|
      stopfrom.routes.each do |stopfromroute|
        routeshash[stopfromroute.nid] ||= [stopfrom]
      end
    end
    st.each do |stopto|
      stopto.routes.each do |stoptoroute|
        if routeshash[stoptoroute.nid] != nil and routeshash[stoptoroute.nid].length==1
          routeshash[stoptoroute.nid] << stopto
        end
      end
    end

    routeshash.each do |key, value|
      if value != nil and value.length==2
          #origin and destination
          ostop = value[0]
          dstop = value[1]
          #time to walk to the stop
          timeToStop = TimeToStop(fromBuilding, ostop)
          wait = 0
          vid = ""
          #get wait time until shuttle gets to origin stop
          begin
            getRequest = 'http://proximobus.appspot.com/agencies/mit/stops/'+ostop.nid+'/predictions/by-route/'+key+".json"
            waitResponseJSONesponse = RestClient.get getRequest
            waitResponseJSON = JSON.parse(waitResponse)


            if waitResponseJSON["items"].length > 0
              waitResponseJSON["items"].each do |item|
                wait = item["seconds"]
                vid = item["vehicle_id"]
                if wait>timeToStop
                  break
                end
              end
              arrival = ArrivalTimeVehicle(vid, dstop.nid, key, wait)
              lastWalk = WalkingTime(dstop, toBuilding)

              finalRoutesHash[key] = [wait, arrival, ostop.name, dstop.name, "", timeToStop, lastWalk]
            else
              routefound = true
            end
          rescue
          end
      end
    end
    #now put it all together
    finalRoutesHash.each do |key|
      key = key[0]
      if finalRoutesHash[key] != nil
        option = finalRoutesHash[key]
        option[4] = Route.where(:nid => key).first.name
        if option != nil
          if option[1]+option[6]< bestOption[1]+bestOption[6]
            bestOption = option
          end
        end
      end
    end
    puts finalRoutesHash
    walk = WalkingTime(fromBuilding, toBuilding)
    if walk>0
      walkingOption = [0, 0, "", "", "", 0, walk]
      if walkingOption[6] < bestOption[1]+bestOption[6]
        arrivaltime = Time.zone.now+walkingOption[6]
        arrivaltime = arrivaltime.strftime("%I:%M")
        text(number, "Your best option is walking, which will get you there at "+arrivaltime+".")
      end
    end
    if bestOption[0]!=9999
      departure = Time.zone.now+bestOption[0]
      arrive = Time.zone.now+bestOption[1]+bestOption[6]
      response = "The " + bestOption[4] + " leaves from " + bestOption[2] + " at " + departure.strftime("%I:%M") + " and gets you there at " + arrive.strftime("%I:%M") + "." +
        " You should get off at the " + bestOption[3] + " stop.".to_json
      puts "RESPONSE"
      puts response
      response = response.gsub('"', '')
      puts "TEXTBOOL"
      puts textbool
      puts "routefound"
      puts routefound
      if textbool
        if routefound
          text(number, response)
        else
          text(number, "Sorry, the Saferide isn't running. Try again later!")
        end
      end
      xml_data(bestOption, response)
    else

      response =  "We did not find a route for you".to_json
      xml_data2(response)
    end



    puts @xml
    respond_to do |format|
        format.xml { render :xml => @xml }
        format.json {render :json => response}
    end
  end
  #Builds the XML response in the case of a successful route found
  def xml_data(bestOption, response)
    departure = Time.zone.now+bestOption[0]
    arrive = Time.zone.now+bestOption[1]
    xml = Builder::XmlMarkup.new
    @xml = xml.ANGELXML{
      xml.MESSAGE {
        xml.PLAY {
          xml.PROMPT("type" => "text") {
            ""
          }
        }
        xml.GOTO("destination" => "/6")
      }
      xml.VARIABLES {
        xml.VAR("name" => "departuretime", "value" => departure.strftime("%I:%M"))
        xml.VAR("name" => "departure", "value" => bestOption[2])
        xml.VAR("name" => "arrival", "value" => bestOption[3])
        xml.VAR("name" => "arrivaltime", "value" => arrive.strftime("%I:%M"))
        xml.VAR("name" => "response", "value" => response)

      }
    }
    end
    #Builds the XML response in the case of no route found
    def xml_data2(response)
    xml = Builder::XmlMarkup.new
    @xml = xml.ANGELXML{
      xml.MESSAGE {
        xml.PLAY {
          xml.PROMPT("type" => "text") {
            ""
          }
        }
        xml.GOTO("destination" => "/1")
      }
    }
    end


    def TimeToStop(origin, destination)
      begin
        walkResponse = RestClient.get 'http://maps.googleapis.com/maps/api/directions/json', {:params => {:origin => origin.latitude.to_s+","+origin.longitude.to_s, :destination => destination.latitude.to_s+","+destination.longitude.to_s, :sensor => false, :mode => "walking"}}
        walkResponseJSON = JSON.parse(walkResponse)
      rescue
        puts  "TIME TO STOP FAILED"
        retry
      end
        timeToStop = 0
        if walkResponseJSON["status"]=="OK"
          walkResponseJSON["routes"][0]["legs"].each do |leg|
            timeToStop += leg["duration"]["value"]
          end
        end
        return timeToStop
    end

    def WalkingTime(from, to)

      begin
        lastWalk = RestClient.get 'http://maps.googleapis.com/maps/api/directions/json', {:params => {:origin => from.latitude.to_s+","+from.longitude.to_s, :destination => to.latitude.to_s+","+to.longitude.to_s, :sensor => false, :mode => "walking"}}
        lastWalkJSON = JSON.parse(lastWalk)
      rescue
        puts  "WALKING TIME FAILED"
        retry
      end
      walking = 0
      if lastWalkJSON["status"]=="OK"
        lastWalkJSON["routes"][0]["legs"].each do |leg|
          walking += leg["duration"]["value"]
        end
      end
      return walking
    end

    def ArrivalTimeVehicle(vehicle, stop, route, wait)
      #Get the arrival time at the final destination
      arrival = 0
      arrivalRequest = 'http://proximobus.appspot.com/agencies/mit/stops/'+stop+'/predictions/by-route/'+route+".json"
      begin
        arrivalResponse = RestClient.get arrivalRequest
        arrivalResponseJSON = JSON.parse(arrivalResponse)
      rescue
        puts  "ARRIVAL TIME FAILED"
        retry
      end
      arrivalResponseJSON["items"].each do |item|
        if item["vehicle_id"]==vehicle
          if item["seconds"]>wait
            arrival = item["seconds"]
            break
          end
        end
      end
      return arrival
    end
    def text(number, response)
      twilio_sid = "AC04688af1bb3a335d3a01229ae63faaa5"
      twilio_token = "6d0a0bfea26a14afc13e651d4c415110"
      twilio_phone_number = "9543562027"
      response = response.chars.each_slice(158).map(&:join)
      @twilio_client = Twilio::REST::Client.new twilio_sid, twilio_token
      response.each do |resp|
        @twilio_client.account.sms.messages.create(
        :from => "+1#{twilio_phone_number}",
        :to => number,
        :body => resp
      )
      end

    end
end

